---
metadata:
  title: >-
    Divorce Forms
  short title: >-
    Divorce Forms
  description: |-
    This interview helps someone in Missouri prepare forms to file for a divorce.
  can_I_use_this_form: |
    If you are a Missouri resident, you can use this interview to prepare forms for a divorce.
  before_you_start: |
    This interview will help you ask the court for a Certificate of dissolution of marriage.
    
    Before you get started, please gather:
    
    1. 
    1. 
    1. 
    
    When you are finished, you will need to:
    
    1. 
    1.
  maturity: production
  estimated_completion_minutes: 10
  estimated_completion_delta: 5
  LIST_topics: 
    - "FA-06-00-00-00"
  tags:
    - "FA-06-00-00-00"
  authors:
    - Toby Fey
    - Kelly McGuire
    - Quinten Steenhuis
    - Brandi Ashby
    - Maura Weber
  original_form:
    - https://www.courts.mo.gov/hosted/circuit11/Documents/dissolution_cert.pdf
  original_form_published_on: 2021-01-05
  help_page_url: >-
    https://www.courts.mo.gov/page.jsp?id=3832
  help_page_title: >-
    Divorce Forms - Petitioner
  allowed_courts: []
  typical_role: "plaintiff"
  al_weaver_version: "1.11.0"
  generated_on: "2025-03-13"
  languages:
    - en
  jurisdiction: NAM-US-US+MO
  review_date: 2025-03-13
  form_titles:
    - Certificate of dissolution of marriage
  form_numbers: []
  update_notes: |
---
code: |
  # This controls the default country and list of states in address field questions
  AL_DEFAULT_COUNTRY = "US"
---
code: |
  # This controls the default state in address field questions
  AL_DEFAULT_STATE = "MO"
---
code: |
  github_repo_name =  'docassemble-MODivorceForms'
---
code: |
  interview_short_title = "Prepare forms for divorce"
---
code: |
  al_form_type = "starts_case" 
---
sections:
  - case_information: Information about your case
  - relief: Requests to the Court
  - user_info: Information about you
  - other_party_info: Information about the other party  
  - children: Children
  - income: Income
  - expenses: Expenses
  - assets: Assets
  - debts: Debts
  - service: Service and Filing Documents
  - review: Review your answers
---
#################### Interview order #####################
comment: |
  Controls order and branching logic for questions specific to this form
id: interview order certificate of dissolution of marriage
code: |
  # Set the allowed courts for this interview
  allowed_courts = []
  nav.set_section("case_information")
  ## 1 What issue are you looking for help with
  if case_type == "Custody":
    custody_exit
  users.gather()
  if users[0].has_prior_name:
    users[0].prior_name.name.first
  other_parties.gather()
  if other_parties[0].has_prior_name:
    other_parties[0].prior_name.name.first

  ## 2 Has your case been filed
  if case.filed == "unknown":
    how_to_find_your_case
    reconsider('case.filed')
  elif case.filed in ['user0_filed','user1_filed']:
    ## 3 Please enter your case information
    previous_petitions # answer
    case_information
    case.county # property_statement, petition, notice_of_hearing, form_17, certificate_of_dissolution
    case.filing_date # petition
    case.circuit # form_17
    case.judge
    case.division_number # notice_of_hearing
    case.docket_number # notice_of_hearing, form_17
    case.matter_type # notice_of_hearing
    case.judgment_date # certificate_of_dissolution
    hearing_date
    hearing_time
    notice_date # property_statement.yml
    petitioner.party_type_description # confidential_information_sheet
    petitioner.attorney.party_type_code
    if petitioner.attorney_involved: # petition, notice_of_hearing
      petitioner.attorney.address.address # petition
      petitioner.attorney.bar_number
      petitioner.attorney.email
      petitioner.attorney.fax
      petitioner.attorney.phone_number
      petitioner.attorney.party_type_code # confidential_information_sheet
    respondent.party_type_code # confidential_information_sheet
    respondent.party_type_description  
    if respondent.attorney_involved:
      respondent.attorney.address.address
      respondent.attorney.bar_number
      respondent.attorney.email
      respondent.attorney.fax
      respondent.attorney.phone_number
      respondent.attorney.party_type_code

  # 4 Is case contested
  if is_case_contested in ['contested','unknown']:
    mediation_info

  # 5 Children  
  children
  if pregnant:
    pregnant_exit
  if child_outside_marriage:
    child_outside_marriage_exit
  if minor_children_before_marriage:
    minor_children_before_marriage_information
  nav.set_section("relief")
  relief
  if relief['other']: # petition, answer
    relief_other

  if minor_children or minor_children_before_marriage:
    presumption_video
    if legal_custody == "Sole":
      legal_custody_sole_explanation
    elif legal_custody == "Third Party":
      legal_custody_other.name.first

    if physical_custody == "Sole" and visitation:
      visitation_supervisor.name.first
    elif physical_custody == "Third Party":
      physical_custody_other.name.first
    if communications["third_party"]:
      communications_other.name.first
    ask_about_dispute_resolution
    child_support # certificate_of_dissolution
  
  if case.filed in ['user0_filed']:
    parenting_plan
  elif case.filed in ['user1_filed']:
    agree_with_parenting_plan
  if maintenance_to_petitioner == "ordered_to_pay":
    maintenance_to_petitioner_amount
    maintenance_to_petitioner_modifiable
  if maintenance_to_respondent == "ordered_to_pay":
    maintenance_to_respondent_amount
    maintenance_to_respondent_modifiable
  if maintenance_to_petitioner or maintenance_to_respondent: 
    maintenance_income_withholding    
  
  nav.set_section("user_information")  

  
  users[0].address.address # petition
  if users[0].address.state == "MO":
    users[0].address.county
  users[0].address.country
  users[0].mo_length_of_residence_choice

  users[0].email
  users[0].driver_license_number
  users[0].phone_number
  if users[0].active_duty and case.filed in ['user1_filed']:
    waive_rights
  users[0].birthdate
  users[0].ssn
  users[0].gender # confidential_information_sheet
  users[0].race # certificate_of_dissolution
  users[0].education_elementary
  users[0].previously_married
  
  nav.set_section("other_party_information")  
  other_parties[0].address.address # petition
  if other_parties[0].address.state == "MO":
    other_parties[0].address.county
  other_parties[0].address.country
  other_parties[0].mo_length_of_residence_choice

  other_parties[0].email
  other_parties[0].driver_license_number
  other_parties[0].phone_number
  other_parties[0].active_duty
  other_parties[0].birthdate
  other_parties[0].ssn
  other_parties[0].gender # confidential_information_sheet
  other_parties[0].race # certificate_of_dissolution
  other_parties[0].education_elementary
  other_parties[0].previously_married
  
  nav.set_section('marriage')
  marriage_info # certificate_of dissolution
  marriage.separation_date # certificate_of dissolution
  marriage.address.county # petition
  marriage.address.country
  marriage.address.state
  marriage.recorded_date
  marriage.separation_date
  marriage.can_be_preserved
  marriage.is_broken
  if other_parties[0].address.state != "MO":
    marriage.live_together_in_mo
  if minor_children or minor_children_before_marriage:
    if others_with_physical_custody or other_custody_proceeding or other_litigation or abuse_or_neglect: # form_17
      related_case_explanation
    if abuse_or_neglect: # petition
      abuse_or_neglect_explanation
    if other_custody_proceeding:
      other_custody_proceeding_explanation
    if other_litigation:
      other_litigation_explanation
    if others_with_physical_custody:
      others_with_physical_custody_explanation
    family_support_order
  other_allegations # petition
  
  if minor_children or minor_children_before_marriage:
    nav.set_section("children")
    children.gather()
    for child in children: # answer
      child.birthdate
      child.ssn
    persons_lived_with_preload # petition
    persons_lived_with.gather()
    others_with_physical_custody

  
  nav.set_section('income')
  users[0].jobs.gather() # income_statement.yml, fee_waiver, form_17
  if users[0].jobs.there_are_any: # form_17
    users[0].employer.name.text
    users[0].employer.email # confidential information sheet order
    users[0].employer.address.address
  users[0].jobs.total(times_per_year = 12)
  users[0].benefits.gather()
  received_welfare # form_17
  if users[0].has_self_employment_income:
    users[0].self_employment_description
  users[0].self_employment_income
  users[0].other_incomes.gather()
  users[0].maintenance_other_received
  users[0].other_children
  users[0].other_child_support_received
  users[0].monthly_gross_income # property_statement
  users[0].self_supporting # property_statement
  other_parties[0].jobs.gather() # income_statement.yml, fee_waiver, form_17
  if other_parties[0].jobs.there_are_any: # form_17
    other_parties[0].employer.name.text
    other_parties[0].employer.email # confidential information sheet order
    other_parties[0].employer.address.address
    if case.filed in ["user0_filed"]:   
      other_parties[0].hours_of_employment
  other_parties[0].jobs.total(times_per_year = 12)
  other_parties[0].benefits.gather()
  received_welfare # form_17
  if other_parties[0].has_self_employment_income:
    other_parties[0].self_employment_description
  other_parties[0].self_employment_income
  other_parties[0].other_incomes.gather()
  other_parties[0].maintenance_other_received
  other_parties[0].other_children
  other_parties[0].other_child_support_received
  other_parties[0].monthly_gross_income # property_statement
  other_parties[0].self_supporting # property_statement  
  
  nav.set_section('expenses')
  users[0].expenses.gather()
  users[0].maintenance_other_paid
  users[0].other_child_support_paid
  users[0].extraordinary_medical_costs.gather()
  users[0].extraordinary_childrearing_costs.gather()
  users[0].health_insurance_costs
  users[0].work_childcare_expenses
  other_parties[0].expenses.gather()
  other_parties[0].maintenance_other_paid
  other_parties[0].other_child_support_paid
  other_parties[0].extraordinary_medical_costs.gather()
  other_parties[0].extraordinary_childrearing_costs.gather()
  other_parties[0].health_insurance_costs
  other_parties[0].work_childcare_expenses
  
  nav.set_section('assets')  
  real_estate.gather() # property_statement, fee_waiver
  if len(real_estate.matches(source=['house'])) > 0:
    assets_warning
  if len(real_estate) > 0:
    real_estate.review_items
  if len(vehicles) > 0:
    vehicles.review_items
  if len(bank_assets) > 0:
    bank_assets.review_items 
  if len(securities) > 0:
    securities.review_items 
  if len(personal_goods) > 0:
    personal_goods.review_items 
  if len(retirement_accounts) > 0:
    retirement_accounts.review_items 
  there_are_any_screen
  if len(life_insurance) > 0:
    life_insurance.review_items 
  if len(interests_in_trust) > 0:
    interests_in_trust.review_items 
  if len(interest_in_contract) > 0:
    interest_in_contract.review_items 
  if len(interest_in_litigation) > 0:
    interest_in_litigation.review_items 
  if len(farm) > 0:
    farm.review_items 
  if len(debts_owed_to_you) > 0:
    debts_owed_to_you.review_items 
  if len(businesses) > 0:
    businesses.review_items 
  if len(other_assets) > 0:
    other_assets.review_items 
    
  nav.set_section('debts')
  secured_debts.gathered
  if len(debts) > 0:
    debts.review_items
  petitioner.assets.gathered
  petitioner.review_assets
  petitioner.debts.gathered
  respondent.assets.gathered
  respondent.debts.gathered
  
  
  nav.set_section('service')
  
  if case.filed == "user0_filed" and respondent_served:
      served_information
  else:
    if case.filed == "user0_field" or case.filed == "not_filed":
      if service_type == "publication":
        service_by_publication_information
      else:
        type_of_personal_service
        personal_service_information
        service.date # form_17
        people_served.gathered # notice_of_hearing
        for people in people_served:
          people.service_address.address
    filing_pleadings_video

  interview_order_mo_divorce_forms = True
---
continue button field: assets_test_screen
question: Test assets
subquestion: |
  ${ real_estate.filter(recommended_award=petitioner.name.full())[0].description }
  
---
###################### Main order ######################
comment: |
  This block includes the logic for standalone interviews.
  Delete mandatory: True to include in another interview
mandatory: True
code: |
  al_intro_screen
  # mo_divorce_forms_intro
  interview_order_mo_divorce_forms
  signature_date
  # Store anonymous data for analytics / statistics
  store_variables_snapshot(
      persistent=True,
      data={
          "zip": showifdef("users[0].address.zip"),
          "reached_interview_end": True,
      },
  )
  mo_divorce_forms_download
---
include:
  - form_17.yml
  - property_statement.yml
  - parenting_plan.yml
  - answer.yml
  - certificate_of_dissolution.yml
  - judgment.yml
  - notice_of_hearing.yml
  - petition.yml
  - redaction_certification.yml
  - income_statement.yml
  - fee_waiver.yml
  - confidential_information_sheet.yml
  - shared.yml
---
id: Certificate of dissolution of marriage
continue button field: certificate_of_dissolution_of_marri_intro
question: |
  Certificate of dissolution of marriage
subquestion: |
  This interview will help you ask the court for a Certificate of dissolution of marriage.
  
  Before you get started, please gather:
  
  1. 
  1. 
  1. 
  
  When you are finished, you will need to:
  
  1. 
  1.

  If you are a _____________, you can use this interview to ____________.

  Most people take about 10 minutes to complete this interview.
---
id: Welcome
question: Missouri Divorce Forms
fields:
  - What issue are you looking for help with?:  case_type
    datatype: radio
    choices:
      - Divorce
      - Custody
---
event: custody_exit
question: Child Custody
subquestion: |
  Unfortunately, this system is unable to address custody issues at this time.  Click the link below to find legal help bettersuited for your situation.
---
id: Finding your case
question: How to find your case
subquestion: |
  Link and info on how to find a case in casenet
continue button field: how_to_find_your_case
---
id: Is Divorce Contested
question: Do you believe your case will be uncontested?
subquestion: |
  In other words, do you and your spouse agree on how you will divide up property, debt, and/or parenting time?
fields:
  - Contested: is_case_contested
    datatype: radio
    choices:
      - Uncontested: uncontested
      - Contested: contested
      - I don't know: unknown
---
id: mediation information screen
question: Mediation
subquestion: |
  You may be surprised how much you and your spouse can work things out for yourselves through mediation!  
  
  Video on how mediation works.  
  
  Link to finding a mediator.
continue button field: mediation_info
---
id: Children
question: Children
fields:
  - Do you and your spouse have children currently under the age of 18?: minor_children
    datatype: yesnoradio
  - Do you or your spouse have any children born before the marriage?: minor_children_before_marriage
    datatype: yesnoradio
  - Have you or your spouse physically gave birth during the marriage with a third party?: child_outside_marriage
    datatype: yesnoradio
  - Are you or your spouse currently pregnant?: pregnant
    datatype: yesnoradio
validation code: |
  if minor_children or minor_children_before_marriage:
    children.there_are_any = True
  else:
    children.there_are_any = False
---
id: set pregnant to false since kick out if pregnant
generic object: ALIndividual
code: |
  x.pregnant = False
---
event: pregnant_exit
id: Pregnancy
question: Pregnancy
subquestion: |
  Pursuant to RSMo 452.305 & 452.310, the court will not be able to grant a divorce.  Please come back when either yourself or your spouse is no longer pregnant.
---
event: child_outside_marriage_exit
id: Child Born Outside of Marriage
question: Children Born Outside of Marriage
subquestion: |
  Missouri law automatically assumes that the husband is the father of the child unless a separate case is filed establishing paternity of the biological father and non-paternity of the husband, even if the biological father is the one on the birth certificate.  It would be in your best interest to find an attorney.  
  
  Link to finding an attorney
---
id: Children Born Before Marriage
question: Children Born Before Marriage
subquestion: |
  Sometimes when a child is born to two people before they get married, the court will require a separate case to establish paternity (even if everybody agrees).  However, most courts will move forward with just the divorce, assuming that paternity is acknowledged through the marriage.  For now, we'll move forward with the understanding that the paternity has been acknowledged.  However, a judge may direct you to file something else or speak to an attorney.
continue button field: 
  minor_children_before_marriage_information
---
id: Presumption of Custody
question: Presumption of 50/50 Custody
subquestion: |
  RSMo 452.375 & 454.1005 Video
continue button field: presumption_video
---
id: Parenting Plan
question: Parenting Plan
subquestion: |
  Calendar Month w/ 5 weekends feature
continue button field: parenting_plan
---
id: interview order with children
code: |
  users[0].name.first
  other_parties[0].name.first
  marriage_info
  children.gather()
  family_information = True
---
id: interview order without children
code: |
  users[0].name.first
  other_parties[0].name.first
  marriage_info
  party_information = True 
---
id: Other Allegations
question: Other Allegations
fields:
  - If there are any other statements you wish to include in your Petition, you should enter them here: other_allegations
    datatype: area
---
id: Assets warning screen
question: Assets Warning
subquestion: |
  It looks like you some pretty significant assets! It is important to know your rights and the best way to divide some of these bigger assets.  You may consider speaking with an attorney if these assets need to be divided.
continue button field: assets_warning
---
id: Service
question: Service of ${ other_parties[0].name_full() }
fields:
  - Has ${ other_parties[0].name_full() }been served?: respondent_served
    datatype: yesnoradio
---
id: Hearing Information Screen
question: Hearing
subquestion: |
  It sounds like you just need some information on how to handle your hearing!
continue button field: served_information

---
id: Publication Service Information Screen
question: Service Information
continue button field: service_by_publication_information
---
id: Personal Service Information Screen
question:  Service Information
continue button field: personal_service_information
---
id: Filing Pleadings Video Screen
question: Video on filing pleadings
continue button field: filing_pleadings_video
---
id: Final Page
question: Final Page
subquestion: |

---

################### PREVIEW SCREEN
id: preview certificate of dissolution of marriage
question: |
  Please preview your form before you sign it.
subquestion: |
  Here is a preview of the form you will sign on the next page.   
  
  ${ al_court_bundle.as_pdf(key='preview') }

  Click the image to open it in a new tab. Click the "Edit answers" button
  to edit your answers.

  ${ action_button_html(url_action('review_certificate_of_dissolution_of_marri'), label='Edit answers', color='info') }
  
  Remember to come back to this window to continue and sign your form.
continue button field: certificate_of_dissolution_of_marri_preview_question    
---
code: |
  signature_fields = []
---
code: |
  # This is a placeholder for the addresses that will be searched
  # for matching address to court. Edit if court venue is based on 
  # a different address than the user's
  [user.address.address for user in users.complete_elements()]
  addresses_to_search = [user.address for user in users.complete_elements()]

---
continue button field: users.revisit
question: |
  Edit users
subquestion: |
  ${ users.table }

  ${ users.add_action() }
---
table: users.table
rows: users
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.last") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.county") else ""
  - Birthdate: |
      row_item.birthdate if defined("row_item.birthdate") else ""
edit:
  - name.last
  - address.county
  - birthdate
confirm: True

---
continue button field: petitioners.revisit
id: Petitioners edit
question: |
  Edit petitioners
subquestion: |
  ${ petitioners.table }

  ${ petitioners.add_action() }
---
table: petitioners.table
rows: petitioners
columns:
  - Address: |
      row_item.address.block() if defined("row_item.address.address") else ""
edit:
  - address.address
confirm: True

---
id: answer enabled block for main interview
code: |
  if case.filed == "user1_filed":
    answer_attachment.enabled = True
  else:
    answer_attachment.enabled = False
---
id: form_17 enabled block for main interview
code: |
  if True:
    form_17_attachment.enabled = True
  else:
    form_17_attachment.enabled = False
---
id: notice_of_hearing enabled block for main interview
code: |
  if True:
    notice_of_hearing_attachment.enabled = True
  else:
    notice_of_hearing_attachment.enabled = False
---
id: certificate_of_dissolution enabled block for main interview
code: |
  if True:
    certificate_of_dissolution_attachment.enabled = True
  else:
    certificate_of_dissolution_attachment.enabled = False
---
id: fee_waiver enabled block for main interview
code: |
  if True:
    fee_waiver_attachment.enabled = True
  else:
    fee_waiver_attachment.enabled = False
---
id: judgment enabled block for main interview
code: |
  if case.filed == "user0_filed":
    judgment_attachment.enabled = True
  else:
    judgment_attachment.enabled = False
---
id: petition enabled block for main interview
code: |
  if case.filed == "user0_filed":
    petition_attachment.enabled = True
  else:
    petition_attachment.enabled = False
---
id: income_statement enabled block for main interview
code: |
  if True:
    income_statement_attachment.enabled = True
  else:
    income_statement_attachment.enabled = False
---
id: property_statement enabled block for main interview
code: |
  if True:
    property_statement_attachment.enabled = True
  else:
    property_statement_attachment.enabled = False
---
id: confidential_information_sheet enabled block for main interview
code: |
  if True:
    confidential_information_sheet_attachment.enabled = True
  else:
    confidential_information_sheet_attachment.enabled = False
---
id: redaction_certification enabled block for main interview
code: |
  if True:
    redaction_certification_attachment.enabled = True
  else:
    redaction_certification_attachment.enabled = False
---
# Bundles group the ALDocuments into separate downloads, such as for court and for the user
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[mo_divorce_forms_Post_interview_instructions, answer_attachment, form_17_attachment, notice_of_hearing_attachment, certificate_of_dissolution_attachment, property_statement_attachment, redaction_certification_attachment, confidential_information_sheet_attachment, income_statement_attachment, petition_attachment, judgment_attachment, fee_waiver_attachment], filename="mo_divorce_forms", title="All forms to download for your records", enabled=True)
  - al_court_bundle: ALDocumentBundle.using(elements=[answer_attachment, form_17_attachment, notice_of_hearing_attachment, certificate_of_dissolution_attachment, property_statement_attachment, redaction_certification_attachment, confidential_information_sheet_attachment, income_statement_attachment, petition_attachment, judgment_attachment, fee_waiver_attachment],  filename="mo_divorce_forms", title="All forms to deliver to court", enabled=True)
---
