---
include:
  - shared.yml
---
mandatory: False
question: ${ selected_court }
---
id: court information
mandatory: False
question: |
  Information about ${ case.court_name }
subquestion: |
  Address: ${ case.address.on_one_line()}
  
  % if defined('case.photo_filename'):
  ${ case.photo }
  
  % endif

  % if defined('case.phone'):
  Phone: ${ case.phone }
  
  % endif  
  
  % if defined('case.website'):
  [Website](${ case.website })
  
  % endif  
  
  % if defined('case.rules'):
  [Rules](${ case.rules })
  
  % endif  
  
  
  
  % if defined('case.schedule'):
  ${ case.schedule }
  
  % endif  

  Documents for 
  % if case.filed == "not_filed":
  Petitioner
  % else:
  Respondent
  % endif

  % for doc in doc_list.true_values():
  ${ doc_list_dictionary[doc] }
  % endfor
  
continue button field: info_displayed
---
variable name: doc_list_dictionary
data:
  petition_attachment: Petition
  answer_attachment: Answer
  parenting_plan_attachment: Parenting Plan
  notice_of_hearing_attachment: Notice of hearing
  certificate_of_dissolution_attachment: Certificate of dissolution
  judgment_attachment: Judgment
  property_statement_attachment: Property statement
  income_statement_attachment: Income statement
  fee_waiver_attachment: Fee waiver
  confidential_information_sheet_attachment: Confidential information sheet
  redaction_certification_attachment: Redaction certification
---
mandatory: True
question: Download ${ info_displayed }
attachment:
  name: MO PRIYA Next Steps
  filename: mo_priya_next_steps
  docx template file: mo_divorce_forms_next_steps.docx
  valid formats:
    - pdf
---
question: Next Steps testing questions
fields:
  - Petitioner or respondent: case.filed
    datatype: radio
    choices:
      - Petitioner: not_filed
      - Respondent: user1_filed
  - Minor children?: minor_children
    datatype: yesnoradio
---
objects:
  - doc_list: DADict.using(auto_gather=False)
---
code: |
  if case.filed in ["not_filed"]:
    doc_list['petition_attachment'] = True
    doc_list['answer_attachment'] = False
  else:
    doc_list['petition_attachment'] = False
    doc_list['answer_attachment'] = True
  if minor_children:
    doc_list['parenting_plan_attachment'] = True
  else:
    doc_list['parenting_plan_attachment'] = False
  doc_list['notice_of_hearing_attachment'] = True 
  doc_list['certificate_of_dissolution_attachment'] = True
  doc_list['judgment_attachment'] = True
  doc_list['property_statement_attachment'] = True
  doc_list['income_statement_attachment'] = True   
  doc_list['fee_waiver_attachment'] = True
  doc_list['confidential_information_sheet_attachment'] = True
  doc_list['redaction_certification_attachment'] = True
  doc_list.gathered = True
---
objects: 
  - case.address: Address
---
objects:
  - case.photo: DAStaticFile
---
code: |
  case.photo.filename = case.photo_filename
---
question: Select Court
subquestion: |
  There is more than one court in your county.  Select the court that your case is in.
fields:
  - Court: selected_court
    datatype: radio
    code: |
      potential_courts
---
code: |
  temp_potential_courts = list()
  for index in range(0,len(county_dictionary[case.county]['courts'])):
    temp_potential_courts.append({"label":county_dictionary[case.county]['courts'][index]['name'],"value":index})
  potential_courts = temp_potential_courts
---
code: |
  if len(county_dictionary[case.county]['courts']) == 1:
    case.court_name = county_dictionary[case.county]['courts'][0]['name']
    case.address.address = county_dictionary[case.county]['courts'][0]['address']
    if 'unit' in county_dictionary[case.county]['courts'][0].keys():
      case.address.unit = county_dictionary[case.county]['courts'][0]['unit']
    case.address.city = county_dictionary[case.county]['courts'][0]['city']
    case.address.state = county_dictionary[case.county]['courts'][0]['state']
    case.address.zip = county_dictionary[case.county]['courts'][0]['zip']
    if 'phone' in county_dictionary[case.county]['courts'][0].keys():
      case.phone = county_dictionary[case.county]['courts'][0]['phone']
    if 'rules' in county_dictionary[case.county]['courts'][0].keys():
      case.rules = county_dictionary[case.county]['courts'][0]['rules']
    if 'website' in county_dictionary[case.county]['courts'][0].keys():
      case.website = county_dictionary[case.county]['courts'][0]['website']
    if 'photo' in county_dictionary[case.county]['courts'][0].keys():
      case.photo_filename = county_dictionary[case.county]['courts'][0]['photo']
    if 'schedule' in county_dictionary[case.county]['courts'][0].keys():
      case.schedule = county_dictionary[case.county]['courts'][0]['schedule']  
  else:
    case.court_name = county_dictionary[case.county]['courts'][int(selected_court)]['name']
    case.address.address = county_dictionary[case.county]['courts'][int(selected_court)]['address']
    if 'unit' in county_dictionary[case.county]['courts'][int(selected_court)].keys():
      case.address.unit = county_dictionary[case.county]['courts'][int(selected_court)]['unit']
    case.address.city = county_dictionary[case.county]['courts'][int(selected_court)]['city']
    case.address.state = county_dictionary[case.county]['courts'][int(selected_court)]['state']
    case.address.zip = county_dictionary[case.county]['courts'][int(selected_court)]['zip']
    if 'phone' in county_dictionary[case.county]['courts'][int(selected_court)].keys():
      case.phone = county_dictionary[case.county]['courts'][int(selected_court)]['phone']
    if 'rules' in county_dictionary[case.county]['courts'][int(selected_court)].keys():
      case.rules = county_dictionary[case.county]['courts'][int(selected_court)]['rules']
    if 'website' in county_dictionary[case.county]['courts'][int(selected_court)].keys():
      case.website = county_dictionary[case.county]['courts'][int(selected_court)]['website']
    if 'photo' in county_dictionary[case.county]['courts'][int(selected_court)].keys():
      case.photo_filename = county_dictionary[case.county]['courts'][int(selected_court)]['photo']
    if 'schedule' in county_dictionary[case.county]['courts'][int(selected_court)].keys():
      case.schedule = county_dictionary[case.county]['courts'][int(selected_court)]['schedule']  
---
