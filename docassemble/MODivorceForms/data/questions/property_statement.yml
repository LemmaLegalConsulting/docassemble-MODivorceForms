---
id: property_statement.yml include
include:
  - shared.yml
---
id: property_statement.yml interview order
mandatory: True
code: |
  users[0].name.first
  other_parties[0].name.first
  petitioner.address.address
  respondent.address.address
  case.county
  notice_date
  if maintenance_to_petitioner == "ordered_to_pay":
    maintenance_to_petitioner_amount
    maintenance_to_petitioner_modifiable
  if maintenance_to_respondent == "ordered_to_pay":
    maintenance_to_respondent_amount
    maintenance_to_respondent_modifiable
  if maintenance_to_petitioner or maintenance_to_respondent:
    maintenance_income_withholding
  if len(real_estate) > 0:
    real_estate.review_items
  if len(bank_assets) > 0:
    bank_assets.review_items
  if len(vehicles) > 0:
    vehicles.review_items
  if len(personal_goods) > 0:
    personal_goods.review_items
  if len(securities) > 0:
    securities.review_items
  there_are_any_screen
  businesses.gather()
  farm.gather()
  debts_owed_to_you.gather()
  interest_in_contract.gather()
  interest_in_litigation.gather()
  interests_in_trust.gather()
  life_insurance.gather()
  retirement_accounts.gather()
  other_assets.gather()
  secured_debts.gathered
  debts.gather()
  for debt in debts:
    debt.recommended_debt
  petitioner.assets.gathered
  petitioner.review_assets
  petitioner.debts.gathered
  respondent.assets.gathered
  respondent.debts.gathered
  service
  mo_divorce_forms_download  
---
id: bankrupcty
generic object: ALIndividual
question: Bankruptcy
fields:
  - Is ${ x } in bankruptcy?: x.in_bankruptcy
    datatype: yesnoradio
---
id: ALIncomeList there are any
generic object: ALIncomeList
code: |
  if x.selected_types.any_true():
    x.move_checks_to_list(selected_terms=x.terms_ordered)
    x.there_are_any = True
  else:
    x.there_are_any = False
---
id: generic set display name backup
generic object: ALAssetListOther
code: |
  if defined('x[i].source') and x[i].source != "other":
    x[i].display_name = x.terms_ordered.get(x[i].source, x[i].source)
  elif defined('x[i].source') and x[i].source == "other" and defined('x[i].source_other'):
    x[i].display_name = x[i].source_other
  else:
    x[i].display_name = x.other_display
---
id: generic there are any
generic object: ALAssetListOther
question: |
  ${ capitalize(x.display_name) }
subquestion: |   
  Do you or your spouse own any ${ x.display_name }?
fields:
  - no label: x.selected_types
    datatype: checkboxes
    code: |
      x.ordered
---
generic object: ALAssetListOther
code: |
  x[i].market_value
  x[i].complete = True
---
id: generic review
generic object: ALAssetListOther
question: Do you want to list any other ${ x.display_name }?
subquestion: |

  Tap Next if you don't have more to add.
  
  ${ x.table }
  
  ${ x.add_action() }
continue button field: x.review_items
---
id: generic review
generic object: ALIndividual
question: Assets of ${ x.name.full() }
subquestion: |

  Tap Next if you don't have more to add.
  
  ${ x.assets_table }
  
continue button field: x.review_assets
---
id: generic revisit
generic object: ALAssetListOther
continue button field: x.revisit
question: |
  Edit ${ x.display_name }
subquestion: |
  ${ x.table }

  ${ x.add_action() }
---
id: generic table
generic object: ALAssetListOther
table: x.table
rows: x
columns:
  - Description: |
      row_item.description
  - Market value: |
      currency(row_item.market_value) if defined("row_item.market_value") else ""
  - Marital property?:  row_item.marital_property
  - Party with possession?: row_item.has_possession
  - Property awarded to: row_item.recommended_award
edit:
  - market_value
---
id: generic table
generic object: ALIndividual
table: x.assets_table
rows: x.assets
columns:
  - Description: |
      row_item.description
  - Market value: |
      currency(row_item.market_value) if defined("row_item.market_value") else ""
---
id: real_estate object
objects:
  - real_estate: ALAssetListOther.using(complete_attribute='complete',there_is_another=False)
---
id: real_estate other display
comment: |
  This keeps the text that may be changed near the top of the section.
  Used in:
  Tell us about your ______
code: |
  real_estate.other_display = "other real estate"
  real_estate.display_name = "real estate"
---
id: real_estate terms_ordered
# "!!omap" makes these terms ordered
# their order here will be their same order when shown to users.
variable name: real_estate.terms_ordered
data: !!omap
  - house: "House"
  - condominium: "Condominium"
  - leasehold: "Leasehold"
  - other: "Other"
---
only sets: real_estate[i].market_value
id: describe real_estate
reconsider: real_estate[i].display_name
question: |
  Tell us about your ${ real_estate[i].display_name }
subquestion: |

  Make your best guess for the market value.
  
  % if i > 1:
  You have already told us about your ${ comma_and_list(asset.display_name for asset in real_estate.complete_elements()) }.
  % elif i > 0:
  You have already told us about your ${ comma_and_list(asset.display_name for asset in real_estate.complete_elements()) }.
  % endif
fields:
  - Type of asset: real_estate[i].source
    code: |
      real_estate.ordered
  - Other (explain): real_estate[i].source_other
    show if:
      variable: real_estate[i].source
      is: other
  - Address: real_estate[i].address
    required: False
  - Legal description: real_estate[i].legal_description
    required: False
  - What is its market value? How much would you get if you sold it?: real_estate[i].market_value
    maxlength: 76
    datatype: currency
  - Is there an amount owed on this property?: real_estate[i].is_amount_owed
    datatype: yesnoradio
  - Who is the money owed to?: real_estate[i].lender
    required: False 
    show if: real_estate[i].is_amount_owed
  - Balance: real_estate[i].balance
    datatype: currency
    show if: real_estate[i].is_amount_owed
  - Monthly Payment: real_estate[i].monthly_payment
    datatype: currency
    show if: real_estate[i].is_amount_owed
  - Who should pay this debt?: real_estate[i].recommended_debt
    show if: real_estate[i].is_amount_owed
    choices:
      - ${ petitioner.name.full() }
      - ${ respondent.name.full() }
  - Is this marital or nonmarital property?: real_estate[i].marital_property
    choices:
      - Marital
      - Nonmarital
      - Both
  - note: |
      ${ collapse_template(marital_property_template) }
  - Party with possession of this property?: real_estate[i].has_possession
    choices:
      - ${ petitioner.name.full() }
      - ${ respondent.name.full() }
      - Other: other
  - Recommended Award: real_estate[i].recommended_award
    choices:
      - ${ petitioner.name.full() }
      - ${ respondent.name.full() }
      - Other: other
validation code: |
  if real_estate[i].source != "other":
    real_estate[i].display_name = real_estate.terms_ordered.get(real_estate[i].source, real_estate[i].source)
  else:
    real_estate[i].display_name = real_estate[i].source_other
  real_estate[i].description = real_estate[i].display_name + " at " + real_estate[i].address + " " + real_estate[i].legal_description
---
id: marital_property_template
template: marital_property_template
subject: |
  What is marital and nonmarital property?
content: |
  Marital property is property acquired throughout the marriage together.  Nonmarital property is property acquired before the marriage or separately.
---
id: vehicles object
objects:
  - vehicles: ALAssetListOther.using(complete_attribute='complete',there_is_another=False)
---
id: vehicles other display
comment: |
  This keeps the text that may be changed near the top of the section.
  Used in:
  Tell us about your ______
code: |
  vehicles.other_display = "other vehicles"
  vehicles.display_name = "vehicles"
---
id: vehicles terms_ordered
# "!!omap" makes these terms ordered
# their order here will be their same order when shown to users.
variable name: vehicles.terms_ordered
data: !!omap
  - car: "Car"
  - truck: "Truck"
  - motorcycle: "Motorcycle"
  - mobile_home: "Mobile home"
  - trailer: "Trailer"
  - boat: "Boat or jetski"
  - airplane: "Airplane"
  - other: "Other"
---
only sets: vehicles[i].market_value
id: describe vehicles
reconsider: vehicles[i].display_name
question: |
  Tell us about your ${ vehicles[i].display_name }
subquestion: |

  Make your best guess for the market value.
  
  % if i > 1:
  You have already told us about your ${ comma_and_list(asset.display_name for asset in vehicles.complete_elements()) }.
  % elif i > 0:
  You have already told us about your ${ comma_and_list(asset.display_name for asset in vehicles.complete_elements()) }.
  % endif
fields:
  - Type of asset: vehicles[i].source
    code: |
      vehicles.ordered
  - Other (explain): vehicles[i].source_other
    show if:
      variable: vehicles[i].source
      is: other
  - Year: vehicles[i].year
    required: False
  - Make: vehicles[i].make
    required: False
  - Make: vehicles[i].model
    required: False
  - Vehicle Identification Number: vehicles[i].vin
    required: False
  - What is its market value? How much would you get if you sold it?: vehicles[i].market_value
    maxlength: 76
    datatype: currency
  - Is there an amount owed on this property?: vehicles[i].is_amount_owed
    datatype: yesnoradio
  - Who is the money owed to?: vehicles[i].lender
    required: False 
    show if: vehicles[i].is_amount_owed
  - Balance: vehicles[i].balance
    datatype: currency
    show if: vehicles[i].is_amount_owed
  - Monthly Payment: vehicles[i].monthly_payment
    datatype: currency
    show if: vehicles[i].is_amount_owed
  - Who should pay this debt?: vehicles[i].recommended_debt
    show if: vehicles[i].is_amount_owed
    choices:
      - ${ petitioner.name.full() }
      - ${ respondent.name.full() }
  - Is this marital or nonmarital property?: vehicles[i].marital_property
    choices:
      - Marital
      - Nonmarital
      - Both
  - note: |
      ${ collapse_template(marital_property_template) }
  - Party with possession of this property?: vehicles[i].has_possession
    choices:
      - ${ petitioner.name.full() }
      - ${ respondent.name.full() }
      - Other: other
  - Recommended Award: vehicles[i].recommended_award
    choices:
      - ${ petitioner.name.full() }
      - ${ respondent.name.full() }
      - Other: other
validation code: |
  if vehicles[i].source != "other":
    vehicles[i].display_name = vehicles.terms_ordered.get(vehicles[i].source, vehicles[i].source)
  else:
    vehicles[i].display_name = vehicles[i].source_other
  vehicles[i].description = vehicles[i].year + " " + vehicles[i].make + " " + vehicles[i].model + vehicles[i].display_name
---
id: bank_assets object
objects:
  - bank_assets: ALAssetListOther.using(complete_attribute='complete',there_is_another=False)
---
id: bank_assets other display
comment: |
  This keeps the text that may be changed near the top of the section.
  Used in:
  Tell us about your ______
code: |
  bank_assets.other_display = "other bank assets"
  bank_assets.display_name = "Bank assets"
---
id: bank_assets terms_ordered
# "!!omap" makes these terms ordered
# their order here will be their same order when shown to users.
variable name: bank_assets.terms_ordered
data: !!omap
  - checking account: "Checking account"
  - savings account: "Savings account"
  - time deposit: "Time deposit"
  - money market: "Money market account"
  - certificates: "Certificate"
  - other: "Other"
---
only sets: bank_assets[i].market_value
id: describe bank_assets
reconsider: bank_assets[i].display_name
question: |
  Tell us about your ${ bank_assets[i].display_name }
subquestion: |

  Make your best guess for the market value.
  
  % if i > 1:
  You have already told us about your ${ comma_and_list(asset.display_name for asset in bank_assets.complete_elements()) }.
  % elif i > 0:
  You have already told us about your ${ comma_and_list(asset.display_name for asset in bank_assets.complete_elements()) }.
  % endif
fields:
  - Type of asset: bank_assets[i].source
    code: |
      bank_assets.ordered
  - Other (explain): bank_assets[i].source_other
    show if:
      variable: bank_assets[i].source
      is: other
  - Bank or Institution: bank_assets[i].institution
    required: False
  - Account number: bank_assets[i].account_number
    required: False
  - What is its market value? How much would you get if you sold it?: bank_assets[i].market_value
    maxlength: 76
    datatype: currency
  - Is this marital or nonmarital property?: bank_assets[i].marital_property
    choices:
      - Marital
      - Nonmarital
      - Both
  - note: |
      ${ collapse_template(marital_property_template) }
  - Names on the account: bank_assets[i].has_possession
    choices:
      - ${ petitioner.name.full() }
      - ${ respondent.name.full() }
      - Other: other
  - Recommended Award: bank_assets[i].recommended_award
    choices:
      - ${ petitioner.name.full() }
      - ${ respondent.name.full() }
      - Other: other
validation code: |
  if bank_assets[i].source != "other":
    bank_assets[i].display_name = bank_assets.terms_ordered.get(bank_assets[i].source, bank_assets[i].source)
  else:
    bank_assets[i].display_name = bank_assets[i].source_other
  if defined('bank_assets[i].institution') and defined('bank_assets[i].account_number'):
    bank_assets[i].description = bank_assets[i].institution + " " + bank_assets[i].account_number + " " + bank_assets[i].display_name 
  elif defined('bank_assets[i].institution'):
    bank_assets[i].description = bank_assets[i].institution + " " + + bank_assets[i].display_name 
  elif defined('bank_assets[i].account_number'):
    bank_assets[i].description = bank_assets[i].account_number + " " + bank_assets[i].display_name 
  else:
    bank_assets[i].description = bank_assets[i].display_name 
  
---
code: |
  users[0].bank_assets = [bank_asset for bank_asset in bank_assets if bank_asset.recommended_award == users[0].name.full()]
---
id: securities object
objects:
  - securities: ALAssetListOther.using(complete_attribute='complete',there_is_another=False)
---
id: securities other display
comment: |
  This keeps the text that may be changed near the top of the section.
  Used in:
  Tell us about your ______
code: |
  securities.other_display = "other securities"
  securities.display_name = "Securities"
---
id: securities terms_ordered
# "!!omap" makes these terms ordered
# their order here will be their same order when shown to users.
variable name: securities.terms_ordered
data: !!omap
  - stocks: "Stocks"
  - bonds: "Bonds"
  - notes: "Promissory notes"
  - mortgages: "Mortgage"
  - money market: "Money market funds"
  - other: "Other"
---
only sets: securities[i].market_value
id: describe securities
reconsider: securities[i].display_name
question: |
  Tell us about your ${ securities[i].display_name }
subquestion: |

  Make your best guess for the market value.
  
  % if i > 1:
  You have already told us about your ${ comma_and_list(asset.display_name for asset in securities.complete_elements()) }.
  % elif i > 0:
  You have already told us about your ${ comma_and_list(asset.display_name for asset in securities.complete_elements()) }.
  % endif
fields:
  - Type of asset: securities[i].source
    code: |
      securities.ordered
  - Other (explain): securities[i].source_other
    show if:
      variable: securities[i].source
      is: other
  - Name: securities[i].name
    required: False
  - Account number: securities[i].account_number
    required: False
  - What is its market value? How much would you get if you sold it?: securities[i].market_value
    maxlength: 76
    datatype: currency
  - Is there an amount owed on this property?: securities[i].is_amount_owed
    datatype: yesnoradio
  - Who is the money owed to?: securities[i].lender
    required: False 
    show if: securities[i].is_amount_owed
  - Balance: securities[i].balance
    datatype: currency
    show if: securities[i].is_amount_owed
  - Monthly Payment: securities[i].monthly_payment
    datatype: currency
    show if: securities[i].is_amount_owed
  - Who should pay this debt?: securities[i].recommended_debt
    show if: securities[i].is_amount_owed
    choices:
      - ${ petitioner.name.full() }
      - ${ respondent.name.full() }
  - Is this marital or nonmarital property?: securities[i].marital_property
    choices:
      - Marital
      - Nonmarital
      - Both
  - note: |
      ${ collapse_template(marital_property_template) }
  - Names in which securities are held: securities[i].has_possession
    choices:
      - ${ petitioner.name.full() }
      - ${ respondent.name.full() }
      - Other: other
  - Recommended Award: securities[i].recommended_award
    choices:
      - ${ petitioner.name.full() }
      - ${ respondent.name.full() }
      - Other: other
validation code: |
  if securities[i].source != "other":
    securities[i].display_name = securities.terms_ordered.get(securities[i].source, securities[i].source)
  else:
    securities[i].display_name = securities[i].source_other
  securities[i].description = securities[i].name + " " +securities[i].display_name 
---
id: retirement_accounts object
objects:
  - retirement_accounts: ALAssetListOther.using(complete_attribute='complete',there_is_another=False)
---
id: retirement_accounts terms_ordered
# "!!omap" makes these terms ordered
# their order here will be their same order when shown to users.
variable name: retirement_accounts.terms_ordered
data: !!omap
  - ira: "IRA"
  - 401k: "401K"
  - 403b: "403B"
  - tiaacref: "TIAA/CREF"
  - keogh: "Keogh"
  - tdsp: "TDSP"
  - tsa: "TSA"
  - profitshare: "Profit sharing"
  - ssp: "Savings & Security Program"
  - defcomp: "Deferred compensation"
  - other: "Other"
---
id: retirement accounts other display
comment: |
  This keeps the text that may be changed near the top of the section.
  Used in:
  Tell us about your ______
code: |
  retirement_accounts.other_display = "other retirement accounts"
  retirement_accounts.display_name = "Retirement accounts"
---
only sets: retirement_accounts[i].market_value
id: describe retirement_accounts
reconsider: retirement_accounts[i].display_name
question: |
  Tell us about your ${ retirement_accounts[i].display_name }
subquestion: |

  Make your best guess for the market value.
  
  % if i > 1:
  You have already told us about your ${ comma_and_list(asset.display_name for asset in retirement_accounts.complete_elements()) }.
  % elif i > 0:
  You have already told us about your ${ comma_and_list(asset.display_name for asset in retirement_accounts.complete_elements()) }.
  % endif
fields:
  - Type of retirement account: retirement_accounts[i].source
    code: |
      retirement_accounts.ordered
  - Other (explain): retirement_accounts[i].source_other
    show if:
      variable: retirement_accounts[i].source
      is: other
  - Name of company: retirement_accounts[i].name
    required: False
  - Total present value: retirement_accounts[i].market_value
    maxlength: 76
    datatype: currency
  - Percentage vested: retirement_accounts[i].percent_vested
    maxlength: 76
    datatype: number
  - Is this marital or nonmarital property?: retirement_accounts[i].marital_property
    choices:
      - Marital
      - Nonmarital
      - Both
  - note: |
      ${ collapse_template(marital_property_template) }
  - Person holding the interest: retirement_accounts[i].has_possession
    choices:
      - ${ petitioner.name.full() }
      - ${ respondent.name.full() }
      - Other: other
  - Recommended Award: retirement_accounts[i].recommended_award
    choices:
      - ${ petitioner.name.full() }
      - ${ respondent.name.full() }
      - Other: other
validation code: |
  if retirement_accounts[i].source != "other":
    retirement_accounts[i].display_name = retirement_accounts.terms_ordered.get(retirement_accounts[i].source, retirement_accounts[i].source)
  else:
    retirement_accounts[i].display_name = retirement_accounts[i].source_other
  retirement_accounts[i].description = retirement_accounts[i].name + " " +retirement_accounts[i].display_name
---
id: multiple assets question
question: Do you have any other assets?
fields:
  - Life insurance: life_insurance.there_are_any
    datatype: yesnoradio
  - Interests in trust: interests_in_trust.there_are_any
    datatype: yesnoradio
    js show if:   |
      val("life_insurance.there_are_any") === true || val("life_insurance.there_are_any") === false
  - Interest in contracts made and not performed: interest_in_contract.there_are_any
    datatype: yesnoradio
    js show if:   |
      val("interests_in_trust.there_are_any") === true || val("interests_in_trust.there_are_any") === false
  - Interest in pending litigation: interest_in_litigation.there_are_any
    datatype: yesnoradio
    js show if:   |
      val("interest_in_contract.there_are_any") === true || val("interest_in_contract.there_are_any") === false
  - Interest in farm equipment: farm.there_are_any
    datatype: yesnoradio
    js show if:   |
      val("interest_in_litigation.there_are_any") === true || val("interest_in_litigation.there_are_any") === false
  - Debts owed to you by others: debts_owed_to_you.there_are_any
    datatype: yesnoradio
    js show if:   |
      val("farm.there_are_any") === true || val("farm.there_are_any") === false
  - Interests in businesses: businesses.there_are_any
    datatype: yesnoradio
    js show if:   |
      val("debts_owed_to_you.there_are_any") === true || val("debts_owed_to_you.there_are_any") === false
  - Other assets: other_assets.there_are_any
    datatype: yesnoradio
    js show if:   |
      val("businesses.there_are_any") === true || val("businesses.there_are_any") === false
continue button field: there_are_any_screen
---

only sets: businesses[i].market_value
generic object: ALAssetListOther
id: describe generic
question: |
  Tell us about your businesses
subquestion: |

  Make your best guess for the market value.
  
  % if i > 1:
  You have already told us about your ${ comma_and_list(asset.description for asset in businesses.complete_elements()) }.
  % elif i > 0:
  You have already told us about your ${ comma_and_list(asset.description for asset in businesses.complete_elements()) }.
  % endif
fields:
  - Description: businesses[i].description
  - What is its market value? How much would you get if you sold it?: businesses[i].market_value
    maxlength: 76
    datatype: currency
  - Is there an amount owed on this property?: businesses[i].is_amount_owed
    datatype: yesnoradio
  - Who is the money owed to?: businesses[i].lender
    required: False 
    show if: businesses[i].is_amount_owed
  - Balance: businesses[i].balance
    datatype: currency
    show if: businesses[i].is_amount_owed
  - Monthly Payment: businesses[i].monthly_payment
    datatype: currency
    show if: businesses[i].is_amount_owed
  - Who should pay this debt?: businesses[i].recommended_debt
    show if: businesses[i].is_amount_owed
    choices:
      - ${ petitioner.name.full() }
      - ${ respondent.name.full() }
  - Is this marital or nonmarital property?: businesses[i].marital_property
    choices:
      - Marital
      - Nonmarital
      - Both
  - note: |
      ${ collapse_template(marital_property_template) }
  - Who has possession?: businesses[i].has_possession
    choices:
      - ${ petitioner.name.full() }
      - ${ respondent.name.full() }
      - Other: other
  - Recommended Award: businesses[i].recommended_award
    choices:
      - ${ petitioner.name.full() }
      - ${ respondent.name.full() }
      - Other: other
---
only sets: farm[i].market_value
generic object: ALAssetListOther
id: describe generic
question: |
  Tell us about your farm
subquestion: |

  Make your best guess for the market value.
  
  % if i > 1:
  You have already told us about your ${ comma_and_list(asset.description for asset in farm.complete_elements()) }.
  % elif i > 0:
  You have already told us about your ${ comma_and_list(asset.description for asset in farm.complete_elements()) }.
  % endif
fields:
  - Description: farm[i].description
  - What is its market value? How much would you get if you sold it?: farm[i].market_value
    maxlength: 76
    datatype: currency
  - Is there an amount owed on this property?: farm[i].is_amount_owed
    datatype: yesnoradio
  - Who is the money owed to?: farm[i].lender
    required: False 
    show if: farm[i].is_amount_owed
  - Balance: farm[i].balance
    datatype: currency
    show if: farm[i].is_amount_owed
  - Monthly Payment: farm[i].monthly_payment
    datatype: currency
    show if: farm[i].is_amount_owed
  - Who should pay this debt?: farm[i].recommended_debt
    show if: farm[i].is_amount_owed
    choices:
      - ${ petitioner.name.full() }
      - ${ respondent.name.full() }
  - Is this marital or nonmarital property?: farm[i].marital_property
    choices:
      - Marital
      - Nonmarital
      - Both
  - note: |
      ${ collapse_template(marital_property_template) }
  - Who has possession?: farm[i].has_possession
    choices:
      - ${ petitioner.name.full() }
      - ${ respondent.name.full() }
      - Other: other
  - Recommended Award: farm[i].recommended_award
    choices:
      - ${ petitioner.name.full() }
      - ${ respondent.name.full() }
      - Other: other
---
only sets: other_assets[i].market_value
generic object: ALAssetListOther
id: describe generic
question: |
  Tell us about your other assets
subquestion: |

  Make your best guess for the market value.
  
  % if i > 1:
  You have already told us about your ${ comma_and_list(asset.description for asset in other_assets.complete_elements()) }.
  % elif i > 0:
  You have already told us about your ${ comma_and_list(asset.description for asset in other_assets.complete_elements()) }.
  % endif
fields:
  - Description: other_assets[i].description
  - What is its market value? How much would you get if you sold it?: other_assets[i].market_value
    maxlength: 76
    datatype: currency
  - Is there an amount owed on this property?: other_assets[i].is_amount_owed
    datatype: yesnoradio
  - Who is the money owed to?: other_assets[i].lender
    required: False 
    show if: other_assets[i].is_amount_owed
  - Balance: other_assets[i].balance
    datatype: currency
    show if: other_assets[i].is_amount_owed
  - Monthly Payment: other_assets[i].monthly_payment
    datatype: currency
    show if: other_assets[i].is_amount_owed
  - Who should pay this debt?: other_assets[i].recommended_debt
    show if: other_assets[i].is_amount_owed
    choices:
      - ${ petitioner.name.full() }
      - ${ respondent.name.full() }
  - Is this marital or nonmarital property?: other_assets[i].marital_property
    choices:
      - Marital
      - Nonmarital
      - Both
  - note: |
      ${ collapse_template(marital_property_template) }
  - Who has possession?: other_assets[i].has_possession
    choices:
      - ${ petitioner.name.full() }
      - ${ respondent.name.full() }
      - Other: other
  - Recommended Award: other_assets[i].recommended_award
    choices:
      - ${ petitioner.name.full() }
      - ${ respondent.name.full() }
      - Other: other
---
only sets: x[i].market_value
generic object: ALAssetListOther
id: describe generic
question: |
  Tell us about your ${ x.display_name }
subquestion: |

  Make your best guess for the market value.
  
  % if i > 1:
  You have already told us about your ${ comma_and_list(asset.description for asset in x.complete_elements()) }.
  % elif i > 0:
  You have already told us about your ${ comma_and_list(asset.description for asset in x.complete_elements()) }.
  % endif
fields:
  - Description: x[i].description
  - What is its market value? How much would you get if you sold it?: x[i].market_value
    maxlength: 76
    datatype: currency
  - Is this marital or nonmarital property?: x[i].marital_property
    choices:
      - Marital
      - Nonmarital
      - Both
  - note: |
      ${ collapse_template(marital_property_template) }
  - Who has possession?: x[i].has_possession
    choices:
      - ${ petitioner.name.full() }
      - ${ respondent.name.full() }
      - Other: other
  - Recommended Award: x[i].recommended_award
    choices:
      - ${ petitioner.name.full() }
      - ${ respondent.name.full() }
      - Other: other
---
id: life_insurance object
objects:
  - life_insurance: ALAssetListOther.using(complete_attribute='complete',there_is_another=False)
---
id: life insurance other display
comment: |
  This keeps the text that may be changed near the top of the section.
  Used in:
  Tell us about your ______
code: |
  life_insurance.other_display = "other life insurance policies"
  life_insurance.display_name = "life insurance policies"
---
id: describe life_insurance
question: |
  Tell us about your ${ ordinal(i) } life insurance policy.
subquestion: |

  
  % if i > 1:
  You have already told us about your ${ comma_and_list(asset.description for asset in life_insurance.complete_elements()) }.
  % elif i > 0:
  You have already told us about your ${ comma_and_list(asset.description  for asset in life_insurance.complete_elements()) }.
  % endif
fields:
  - Type of life insurance: life_insurance[i].type
    required: False
  - Name of issuing company: life_insurance[i].name
    required: False
  - Policy number: life_insurance[i].account_number
    required: False
  - Face value: life_insurance[i].market_value
    maxlength: 76
    datatype: currency
  - Cash value: life_insurance[i].cash_value
    maxlength: 76
    datatype: currency
  - Is this marital or nonmarital property?: life_insurance[i].marital_property
    choices:
      - Marital
      - Nonmarital
      - Both
  - note: |
      ${ collapse_template(marital_property_template) }
  - Owner of policy: life_insurance[i].owner
    choices:
      - ${ petitioner.name.full() }
      - ${ respondent.name.full() }
      - Other: other
  - Insured: life_insurance[i].insured
    choices:
      - ${ petitioner.name.full() }
      - ${ respondent.name.full() }
      - Other: other
  - Beneficiaries: life_insurance[i].beneficiaries
    choices:
      - ${ petitioner.name.full() }
      - ${ respondent.name.full() }
      - Other: other
  - Recommended Award: life_insurance[i].recommended_award
    choices:
      - ${ petitioner.name.full() }
      - ${ respondent.name.full() }
      - Other: other
validation code: |
  life_insurance[i].description = life_insurance[i].name + " " +life_insurance[i].type
---
id: life insurance table
table: life_insurance.table
rows: life_insurance
columns:
  - Description: |
      row_item.description
  - Market value: |
      currency(row_item.market_value) if defined("row_item.market_value") else ""
  - Marital property?:  row_item.marital_property
  - Beneficiaries: row_item.beneficiaries
  - Property awarded to: row_item.recommended_award
edit:
  - market_value
---
id: interests_in_trust object
objects:
  - interests_in_trust: ALAssetListOther.using(complete_attribute='complete',there_is_another=False)
---
id: interests_in_trust other display
comment: |
  This keeps the text that may be changed near the top of the section.
  Used in:
  Tell us about your ______
code: |
  interests_in_trust.other_display = "other interests in a trust"
  interests_in_trust.display_name = "interest in a trust"
---
id: describe interests_in_trust
question: |
  Tell us about your ${ ordinal(i) } interest in a trust
subquestion: |

  
  % if i > 1:
  You have already told us about your ${ comma_and_list(asset.description for asset in interests_in_trust.complete_elements()) }.
  % elif i > 0:
  You have already told us about your ${ comma_and_list(asset.description  for asset in interests_in_trust.complete_elements()) }.
  % endif
fields:
  - Name of trust: interests_in_trust[i].name
    required: False
  - Nature of interest: interests_in_trust[i].nature
    required: False
  - Market value: interests_in_trust[i].market_value
    maxlength: 76
    datatype: currency
  - Is this marital or nonmarital property?: interests_in_trust[i].marital_property
    choices:
      - Marital
      - Nonmarital
      - Both
  - note: |
      ${ collapse_template(marital_property_template) }
  - Trustee: interests_in_trust[i].trustee
    choices:
      - ${ petitioner.name.full() }
      - ${ respondent.name.full() }
      - Other: other
  - Settlor: interests_in_trust[i].settlor
    choices:
      - ${ petitioner.name.full() }
      - ${ respondent.name.full() }
      - Other: other
  - Beneficiaries: interests_in_trust[i].beneficiaries
    choices:
      - ${ petitioner.name.full() }
      - ${ respondent.name.full() }
      - Other: other
  - Recommended Award: interests_in_trust[i].recommended_award
    choices:
      - ${ petitioner.name.full() }
      - ${ respondent.name.full() }
      - Other: other
  - Copy of trust instrument: interests_in_trust[i].file
    datatype: file
    required: False
validation code: |
  interests_in_trust[i].description = interests_in_trust[i].name
---
id: interests_in_trust table
table: interests_in_trust.table
rows: interests_in_trust
columns:
  - Description: |
      row_item.description
  - Market value: |
      currency(row_item.market_value) if defined("row_item.market_value") else ""
  - Marital property?:  row_item.marital_property
  - Beneficiaries: row_item.beneficiaries
  - Property awarded to: row_item.recommended_award
edit:
  - market_value
---
id: interest_in_contract object
objects:
  - interest_in_contract: ALAssetListOther.using(complete_attribute='complete',there_is_another=False)
---
id: interest_in_contract other display
comment: |
  This keeps the text that may be changed near the top of the section.
  Used in:
  Tell us about your ______
code: |
  interest_in_contract.other_display = "other interests in a contract"
  interest_in_contract.display_name = "interest in a contract"
---
id: interest_in_litigation object
objects:
  - interest_in_litigation: ALAssetListOther.using(complete_attribute='complete',there_is_another=False)
---
id: interest_in_litigation other display
comment: |
  This keeps the text that may be changed near the top of the section.
  Used in:
  Tell us about your ______
code: |
  interest_in_litigation.other_display = "other lawsuits"
  interest_in_litigation.display_name = "lawsuits against anyone"
---
id: farm object
objects:
  - farm: ALAssetListOther.using(complete_attribute='complete',there_is_another=False)
---
id: farms other display
comment: |
  This keeps the text that may be changed near the top of the section.
  Used in:
  Tell us about your ______
code: |
  farm.other_display = "other farm equipment, animal or crops"
  farm.display_name = "farm equipment, animal or crops"
---
id: debts_owed_to_you object
objects:
  - debts_owed_to_you: ALAssetListOther.using(complete_attribute='complete',there_is_another=False)
---
id: interests_in_trust other display
comment: |
  This keeps the text that may be changed near the top of the section.
  Used in:
  Tell us about your ______
code: |
  debts_owed_to_you.other_display = "other money owed to you"
  debts_owed_to_you.display_name = "money owed to you"
---
id: businesses object
objects:
  - businesses: ALAssetListOther.using(complete_attribute='complete',there_is_another=False)
---
id: businesses other display
comment: |
  This keeps the text that may be changed near the top of the section.
  Used in:
  Tell us about your ______
code: |
  businesses.other_display = "other businesses"
  businesses.display_name = "businesses"
---
id: other_assets object
objects:
  - other_assets: ALAssetListOther.using(complete_attribute='complete',there_is_another=False)
---
id: other_assets other display
comment: |
  This keeps the text that may be changed near the top of the section.
  Used in:
  Tell us about your ______
code: |
  other_assets.other_display = "other assets"
  other_assets.display_name = "other assets"
---
generic object: ALIndividual
objects:
  - x.assets: ALAssetListOther.using(auto_gather=False)
---
id: code to determine individual assets based on recommended award
generic object: ALIndividual
code: |
  x.assets.clear()
  for list in [real_estate,vehicles, bank_assets, securities, personal_goods, retirement_accounts, life_insurance, interests_in_trust, interest_in_contract, interest_in_litigation, farm, debts_owed_to_you, businesses, other_assets]:
    for item in list:
      if item.recommended_award == x.name.full():
        x.assets.append(item)
        x.assets[-1].list = list.display_name
        if not defined('x.assets[-1].source'):
          x.assets[-1].source = list.display_name
  x.assets.gathered = True
---
id: populate debt list from debts in assets
code: |
  secured_debts.clear()
  for list in [real_estate,vehicles, securities, personal_goods, farm, businesses, other_assets]:
    for item in list:
      if item.is_amount_owed and not item in secured_debts.complete_elements():
        secured_debts.append(item)
        item.already_included = True
        secured_debts[-1].list = list.instanceName
        if not defined('secured_debts[-1].source'):
          secured_debts[-1].source = list.instanceName
  secured_debts.gathered = True
---
continue button field: preload_debts_test
question: Test
subquestion: |
  ${ debts.complete_elements() }
---
generic object: ALIndividual
objects:
  - x.debts: ALAssetListOther.using(auto_gather=False)
---
id: generic ordered object for checkboxes
objects:
  - debts_ordered: DAOrderedDict.using(elements=debts_terms_ordered, auto_gather=False, gathered=True)
---
id: code to generate separate lists
generic object: ALIndividual
code: |
  x.debts.clear()
  for debt in secured_debts:
    if debt.recommended_debt == x.name.full():
      x.debts.append(debt)
  for debt in debts:
    if debt.recommended_debt == x.name.full():
      x.debts.append(debt)
  x.debts.gathered = True
---
id: debts review
question: Do you want to list any other debts?
subquestion: |
  Tap Next if you don't have more to add.
  
  ${ debts.table }
  
  ${ debts.add_action() }
continue button field: debts.review_items
---
id: generic review
generic object: ALIndividual
question: Debts of ${ x.name.full() }
subquestion: |

  Tap Next if you don't have more to add.
  
  ${ x.debts_table }
  
continue button field: x.review_debts
---
id: generic table
generic object: ALIndividual
table: x.debts_table
rows: x.debts
columns:
  - Type: |
      row_item.source
  - Lender: |
      row_item.lender
  - Balance: |
      currency(row_item.balance) if defined("row_item.balance") else ""
  - Monthly payment:
      currency(row_item.monthly_payment) if defined("row_item.monthly_payment") else ""
---
id: debts revisit
continue button field: debts.revisit
question: |
  Edit debts
  
subquestion: |
  ${ debts.table }

  ${ debts.add_action() }
---
id: debts table
table: debts.table
rows: debts
columns:
  - Type: |
      row_item.source
  - Lender: |
      row_item.lender
  - Balance: |
      currency(row_item.balance) if defined("row_item.balance") else ""
  - Monthly payment:
      currency(row_item.monthly_payment) if defined("row_item.monthly_payment") else ""
  - Debts to be paid by: row_item.recommended_debt if defined("row_item.recommended_debt") else ""
edit:
  - lender
---
generic object: ALAsset
question: Who should pay this debt?
fields:
  - Who should pay this debt?: x.recommended_debt
    choices:
      - ${ petitioner.name.full() }
      - ${ respondent.name.full() }
---
question: | 

  Tell us about your ${ debts[i].display_name }
subquestion: |

  Make your best guess for the market value.
  
  % if i > 1:
  You have already told us about your ${ comma_and_list(asset.display_name for asset in debts.complete_elements()) }.
  % elif i > 0:
  You have already told us about your ${ comma_and_list(asset.display_name for asset in debts.complete_elements()) }.
  % endif
fields:
  - Type of asset: debts[i].source
    code: |
      debts.ordered
  - Other (explain): debts[i].source_other
    show if:
      variable: debts[i].source
      is: other
  - Who is the money owed to?: debts[i].lender
    required: False 
  - Balance: debts[i].balance
    datatype: currency
    required: False 
  - Monthly Payment: debts[i].monthly_payment
    datatype: currency
    required: False 
  - Marital or separate debt: debts[i].marital_property
    datatype: radio
    choices:
      - Marital
      - Nonmarital
      - Both
  - Who should pay this debt?: debts[i].recommended_debt
    choices:
      - ${ petitioner.name.full() }
      - ${ respondent.name.full() }
validation code: |
  if debts[i].source != 'other':
    if defined('debts[i].lender'):
      debts[i].description = debts[i].lender + " " + debts.terms_ordered.get(debts[i].source, debts[i].source) 
    else:
      debts.terms_ordered.get(debts[i].source, debts[i].source) 
  else:
    if defined('debts[i].lender'):
      debts[i].description = debts[i].lender + " " + debts[i].source_other
    else:
      debts[i].description = debts[i].source_other
---
question: Additional provisions for the Property Statement
fields:
  - Do you want to include additional provisions in the Statement of Property and Debt and Proposed Separation Agreement?: is_additional_provisions
    datatype: yesnoradio
  - no label: additional_provisions
    datatype: area
    show if: is_additional_provisions
    
---
id: bankrupcy
generic object: ALIndividual
question: Bankruptcy
fields: 
  - Is ${ x.name_full() } currently in a bankruptcy prooceeding?: x.in_bankruptcy
    datatype: yesnoradio
---
code: |
  notice_date = today()
---
# Should be only used in interviews run from property_statement.yml, in an interview from main, the version from shared.yml will be lower because the block including property_statement.yml is above it
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[mo_divorce_forms_Post_interview_instructions, property_statement_attachment], filename="mo_divorce_forms", title="All forms to download for your records", enabled=True)
  - al_court_bundle: ALDocumentBundle.using(elements=[property_statement_attachment],  filename="mo_divorce_forms", title="All forms to deliver to court", enabled=True)
---
objects:
  - property_statement_attachment: ALDocument.using(title="Statement of Property and Debt and Proposed Separation Agreement", filename="property_statement", has_addendum=False, )
---
code: |
  property_statement_attachment.enabled = True
---
attachment:
  name: Statement of Property and Debt and Proposed Separation Agreement
  filename: property_statement
  variable name: property_statement_attachment[i]
  skip undefined: True
  pdf template file: property_statement.pdf
  editable: False
  fields:
      - "county_name": ${ case.county } 
      - "petitioners_first_name": ${ petitioner.name.first } 
      - "petitioners_middle_name": ${ petitioner.name.middle } 
      - "petitioners_last_name": ${ petitioner.name.last } 
      - "petitioners_suffix": ${ petitioner.name.suffix } 
      - "respondents_middle_name": ${ respondent.name.middle } 
      - "respondents_last_name": ${ respondent.name.last } 
      - "respondents_suffix": ${ respondent.name.suffix } 
      - "respondents_first_name": ${ respondent.name.first } 
      - "petitioner_own_real_estate_no": ${ len([item for item in real_estate if item.recommended_award ==  petitioner.name.full()]) == 0 } 
      - "petitioner_own_real_estate_yes": ${ len([item for item in real_estate if item.recommended_award ==  petitioner.name.full()]) > 0 } 
      - "petitioner_own_vehicle_yes": ${ len([item for item in vehicles.matches(source=['car','truck','motorcycle']) if item.recommended_award ==  petitioner.name.full()]) > 0 } 
      - "petitioner_own_misc_property_no": ${ len([item for item in vehicles.matches(source=['car','truck','motorcycle']) if item.recommended_award ==  petitioner.name.full()]) == 0 } 
      - "petitioner_own_vehicle_no": ${ len([item for item in vehicles.matches(source=['mobile_home','trailer','boat','airplane','other']) if item.recommended_award ==  petitioner.name.full()]) > 0 } 
      - "petitioner_bank_account_yes": ${ len([item for item in vehicles.matches(source=['mobile_home','trailer','boat','airplane','other']) if item.recommended_award ==  petitioner.name.full()]) == 0 } 
      - "petitioner_bank_account_no": ${ len([item for item in bank_assets if item.recommended_award ==  petitioner.name.full()]) == 0 } 
      - "petitioner_own_misc_property_yes": ${ len([item for item in bank_assets if item.recommended_award ==  petitioner.name.full()]) > 0 } 
      - "petitioner_retirement_yes": ${ len([item for item in retirement_accounts if item.recommended_award ==  petitioner.name.full()]) > 0 } 
      - "petitioner_retirement_no": ${ len([item for item in retirement_accounts if item.recommended_award ==  petitioner.name.full()]) == 0 } 
      - "petitioner_ira_yes": ${ len([item for item in retirement_accounts if item.recommended_award ==  petitioner.name.full()]) > 0 } 
      - "petitioner_ira_no": ${ len([item for item in retirement_accounts if item.recommended_award ==  petitioner.name.full()]) == 0 } 
      - "petitioner_home_goods_no": ${ len([item for item in personal_goods.matches(source=["appliances", "computers", "electronics", "furnishings", "other"]) if item.recommended_award ==  petitioner.name.full()]) == 0 } 
      - "petitioner_home_goods_yes": ${ len([item for item in personal_goods.matches(source=["appliances", "computers", "electronics", "furnishings", "other"]) if item.recommended_award ==  petitioner.name.full()]) > 0 } 
      - "petitioner_personal_goods_yes": ${ len([item for item in personal_goods.matches(source=["jewelry", "antiques", "artwork", "guns", "coins_stamps", "tools", "collectibles", "instruments", "china_etc"]) if item.recommended_award ==  petitioner.name.full()]) > 0 } 
      - "petitioner_personal_goods_no": ${ len([item for item in personal_goods.matches(source=["jewelry", "antiques", "artwork", "guns", "coins_stamps", "tools", "collectibles", "instruments", "china_etc"]) if item.recommended_award ==  petitioner.name.full()]) == 0 } 
      - "petitioner_business_yes": ${ len([item for item in businesses if item.recommended_award ==  petitioner.name.full()]) > 0 } 
      - "petitioner_business_no": ${ len([item for item in businesses if item.recommended_award ==  petitioner.name.full()]) == 0 } 
      - "petitioner_bonds_yes": ${ len([item for item in securities if item.recommended_award ==  petitioner.name.full()]) > 0 } 
      - "petitioner_bonds_no": ${ len([item for item in securities if item.recommended_award ==  petitioner.name.full()]) == 0 } 
      - "petitioner_life_insurance_yes": ${ len([item for item in life_insurance if item.recommended_award ==  petitioner.name.full()]) > 0 } 
      - "petitioner_life_insurance_no": ${ len([item for item in life_insurance if item.recommended_award ==  petitioner.name.full()]) == 0 } 
      - "petitioner_owe_funds_yes": ${ len([item for item in interest_in_contract if item.recommended_award ==  petitioner.name.full()]) > 0 } 
      - "petitioner_owe_funds_no": ${ len([item for item in interest_in_contract if item.recommended_award ==  petitioner.name.full()]) == 0 } 
      - "petitioner_lawsuit_yes": ${ len([item for item in interest_in_litigation if item.recommended_award ==  petitioner.name.full()]) > 0 } 
      - "petitioner_lawsuit_no": ${ len([item for item in interest_in_litigation if item.recommended_award ==  petitioner.name.full()]) == 0 } 
      - "petitioner_farm_yes": ${ len([item for item in farm if item.recommended_award ==  petitioner.name.full()]) > 0 } 
      - "petitioner_farm_no": ${ len([item for item in farm if item.recommended_award ==  petitioner.name.full()]) == 0 } 
      - "petitioner_trust_yes": ${ len([item for item in interests_in_trust if item.recommended_award ==  petitioner.name.full()]) > 0 } 
      - "petitioner_trust_no": ${ len([item for item in interests_in_trust if item.recommended_award ==  petitioner.name.full()]) == 0 } 
      - "petitioner_other_asset_no": ${ len([item for item in other_assets if item.recommended_award ==  petitioner.name.full()]) == 0 } 
      - "petitioner_other_asset_yes": ${ len([item for item in other_assets if item.recommended_award ==  petitioner.name.full()]) > 0 } 
      - "respondent_own_real_estate_yes": ${ len([item for item in real_estate if item.recommended_award ==  respondent.name.full()]) > 0 } 
      - "respondent_own_real_estate_no": ${ len([item for item in real_estate if item.recommended_award ==  respondent.name.full()]) == 0 } 
      - "respondent_own_vehicle_yes": ${ len([item for item in vehicles.matches(source=['car','truck','motorcycle'])  if item.recommended_award ==  respondent.name.full()]) > 0 } 
      - "respondent_own_vehicle_no": ${ len([item for item in vehicles.matches(source=['car','truck','motorcycle'])  if item.recommended_award ==  respondent.name.full()]) == 0 } 
      - "respondent_own_misc_property_yes": ${ len([item for item in vehicles.matches(source=['mobile_home','trailer','boat','airplane','other']) if item.recommended_award ==  respondent.name.full()]) == 0 } 
      - "respondent_own_misc_property_no": ${ len([item for item in vehicles.matches(source=['mobile_home','trailer','boat','airplane','other']) if item.recommended_award ==  respondent.name.full()]) > 0 } 
      - "respondent_bank_account_yes": ${ len([item for item in bank_assets if item.recommended_award ==  respondent.name.full()]) > 0 } 
      - "respondent_bank_account_no": ${ len([item for item in bank_assets if item.recommended_award ==  respondent.name.full()]) == 0 } 
      - "respondent_retirement_yes": ${ len([item for item in retirement_accounts if item.recommended_award ==  respondent.name.full()]) > 0 } 
      - "respondent_retirement_no": ${ len([item for item in retirement_accounts if item.recommended_award ==  respondent.name.full()]) == 0 } 
      - "respondent_ira_yes": ${ len([item for item in retirement_accounts if item.recommended_award ==  respondent.name.full()]) > 0 } 
      - "respondent_ira_no": ${ len([item for item in retirement_accounts if item.recommended_award ==  respondent.name.full()]) == 0 } 
      - "respondent_home_goods_yes": ${ len([item for item in personal_goods.matches(source=["appliances", "computers", "electronics", "furnishings", "other"]) if item.recommended_award ==  respondent.name.full()]) > 0 } 
      - "respondent_home_goods_no": ${ len([item for item in personal_goods.matches(source=["appliances", "computers", "electronics", "furnishings", "other"]) if item.recommended_award ==  respondent.name.full()]) == 0 } 
      - "respondent_personal_goods_yes": ${ len([item for item in personal_goods.matches(source=["jewelry", "antiques", "artwork", "guns", "coins_stamps", "tools", "collectibles", "instruments", "china_etc"]) if item.recommended_award ==  respondent.name.full()]) > 0 } 
      - "respondent_personal_goods_no": ${ len([item for item in personal_goods.matches(source=["jewelry", "antiques", "artwork", "guns", "coins_stamps", "tools", "collectibles", "instruments", "china_etc"]) if item.recommended_award ==  respondent.name.full()]) == 0 } 
      - "respondent_business_yes": ${ len([item for item in businesses if item.recommended_award ==  respondent.name.full()]) > 0 } 
      - "respondent_business_no": ${ len([item for item in businesses if item.recommended_award ==  respondent.name.full()]) == 0 } 
      - "respondent_bonds_yes": ${ len([item for item in securities if item.recommended_award ==  respondent.name.full()]) > 0 } 
      - "respondent_bonds_no": ${ len([item for item in securities if item.recommended_award ==  respondent.name.full()]) == 0 } 
      - "respondent_life_insurance_yes": ${ len([item for item in life_insurance if item.recommended_award ==  respondent.name.full()]) > 0 } 
      - "respondent_life_insurance_no": ${ len([item for item in life_insurance if item.recommended_award ==  respondent.name.full()]) == 0 } 
      - "respondent_owe_funds_no": ${ len([item for item in interest_in_contract if item.recommended_award ==  respondent.name.full()]) == 0 } 
      - "respondent_owe_funds_yes": ${ len([item for item in interest_in_contract if item.recommended_award ==  respondent.name.full()]) > 0 } 
      - "respondent_lawsuit_yes": ${ len([item for item in interest_in_litigation if item.recommended_award ==  respondent.name.full()]) > 0 } 
      - "respondent_lawsuit_no": ${ len([item for item in interest_in_litigation if item.recommended_award ==  respondent.name.full()]) == 0 } 
      - "respondent_farm_no": ${ len([item for item in farm if item.recommended_award ==  respondent.name.full()]) == 0 } 
      - "respondent_farm_yes": ${ len([item for item in farm if item.recommended_award ==  respondent.name.full()]) > 0 } 
      - "respondent_trust_yes": ${ len([item for item in interests_in_trust if item.recommended_award ==  respondent.name.full()]) > 0 } 
      - "respondent_trust_no": ${ len([item for item in interests_in_trust if item.recommended_award ==  respondent.name.full()]) == 0 } 
      - "respondent_other_asset_no": ${ len([item for item in other_assets if item.recommended_award ==  respondent.name.full()]) == 0 } 
      - "respondent_other_asset_yes": ${ len([item for item in other_assets if item.recommended_award ==  respondent.name.full()]) > 0 } 
      - "petitioner_property1_marital": |
          % if len(petitioner.assets) > 0:
          ${ petitioner.assets[0].marital_property == "Marital" }
          % endif
      - "petitioner_property1_possession_petitioner": |
          % if len(petitioner.assets) > 0:
          ${ petitioner.assets[0].has_possession == petitioner.name.full() }
          % endif
      - "petitioner_amount_owed_property1_yes": |
          % if len(petitioner.assets) > 0:
          ${ petitioner.assets[0].is_amount_owed }
          % endif
      - "petitioner_market_value1": |
          % if len(petitioner.assets) > 0:
          ${ "{:.2f}".format(petitioner.assets[0].market_value) }
          % endif
      - "petitioner_property1_nonmarital": |
          % if len(petitioner.assets) > 0:
          ${ petitioner.assets[0].marital_property == "Nonmarital" }
          % endif
      - "petitioner_property1_possession_respondent": |
          % if len(petitioner.assets) > 0:
          ${ petitioner.assets[0].has_possession == respondent.name.full() }
          % endif
      - "petitioner_amount_owed_property1_no": |
          % if len(petitioner.assets) > 0:
          ${ not defined("petitioner.assets[0].is_amount_owed") or not petitioner.assets[0].is_amount_owed }
          % endif
      - "petitioner_property1_both": |
          % if len(petitioner.assets) > 0:
          ${ petitioner.assets[0].marital_property == "Both" }
          % endif
      - "petitioner_property1_possession_other": |
          % if len(petitioner.assets) > 0:
          ${ petitioner.assets[0].has_possession == "other" }
          % endif
      - "petitioner_property_item1": |
          % if len(petitioner.assets) > 0:
          ${ petitioner.assets[0].description }
          % endif
      - "petitioner_property2_marital": |
          % if len(petitioner.assets) > 1:
          ${ petitioner.assets[1].marital_property == "Marital" }
          % endif
      - "petitioner_property2_possession_petitioner": |
          % if len(petitioner.assets) > 1:
          ${ petitioner.assets[1].has_possession == petitioner.name.full() }
          % endif
      - "petitioner_amount_owed_property2_yes": |
          % if len(petitioner.assets) > 1:
          ${ petitioner.assets[1].is_amount_owed }
          % endif
      - "petitioner_market_value2": |
          % if len(petitioner.assets) > 1:
          ${ "{:.2f}".format(petitioner.assets[1].market_value) }
          % endif
      - "petitioner_property2_nonmarital": |
          % if len(petitioner.assets) > 1:
          ${ petitioner.assets[1].marital_property == "Nonmarital" }
          % endif
      - "petitioner_property2_possession_respondent": |
          % if len(petitioner.assets) > 1:
          ${ petitioner.assets[1].has_possession == respondent.name.full() }
          % endif
      - "petitioner_amount_owed_property2_no": |
          % if len(petitioner.assets) > 1:
          ${ not defined("petitioner.assets[1].is_amount_owed") or not petitioner.assets[1].is_amount_owed }
          % endif
      - "petitioner_property2_both": |
          % if len(petitioner.assets) > 1:
          ${ petitioner.assets[1].marital_property == "Both" }
          % endif
      - "petitioner_property2_possession_other": |
          % if len(petitioner.assets) > 1:
          ${ petitioner.assets[1].has_possession == "other" }
          % endif
      - "petitioner_property_item2": |
          % if len(petitioner.assets) > 1:
          ${ petitioner.assets[1].description }
          % endif
      - "petitioner_property3_marital": |
          % if len(petitioner.assets) > 2:
          ${ petitioner.assets[2].marital_property == "Marital" }
          % endif
      - "petitioner_property3_possession_petitioner": |
          % if len(petitioner.assets) > 2:
          ${ petitioner.assets[2].has_possession == petitioner.name.full() }
          % endif
      - "petitioner_amount_owed_property3_yes": |
          % if len(petitioner.assets) > 2:
          ${ petitioner.assets[2].is_amount_owed }
          % endif
      - "petitioner_market_value3": |
          % if len(petitioner.assets) > 2:
          ${ "{:.2f}".format(petitioner.assets[2].market_value) }
          % endif
      - "petitioner_property3_nonmarital": |
          % if len(petitioner.assets) > 2:
          ${ petitioner.assets[2].marital_property == "Nonmarital" }
          % endif
      - "petitioner_property3_possession_respondent": |
          % if len(petitioner.assets) > 2:
          ${ petitioner.assets[2].has_possession == respondent.name.full() }
          % endif
      - "petitioner_amount_owed_property3_no": |
          % if len(petitioner.assets) > 2:
          ${ not defined("petitioner.assets[2].is_amount_owed") or not petitioner.assets[2].is_amount_owed }
          % endif
      - "petitioner_property3_both": |
          % if len(petitioner.assets) > 2:
          ${ petitioner.assets[2].marital_property == "Both" }
          % endif
      - "petitioner_property3_possession_other": |
          % if len(petitioner.assets) > 2:
          ${ petitioner.assets[2].has_possession == "other" }
          % endif
      - "petitioner_property_item3": |
          % if len(petitioner.assets) > 2:
          ${ petitioner.assets[2].description }
          % endif
      - "petitioner_property4_marital l": |
          % if len(petitioner.assets) > 3:
          ${ petitioner.assets[3].marital_property == "Marital" }
          % endif
      - "petitioner_property4_possession_petitioner": |
          % if len(petitioner.assets) > 3:
          ${ petitioner.assets[3].has_possession == petitioner.name.full() }
          % endif
      - "petitioner_amount_owed_property4_yes": |
          % if len(petitioner.assets) > 3:
          ${ petitioner.assets[3].is_amount_owed }
          % endif
      - "petitioner_market_value4": |
          % if len(petitioner.assets) > 3:
          ${ "{:.2f}".format(petitioner.assets[3].market_value) }
          % endif
      - "petitioner_property4_nonmarital": |
          % if len(petitioner.assets) > 3:
          ${ petitioner.assets[3].marital_property == "Nonmarital" }
          % endif
      - "petitioner_property4_possession_respondent": |
          % if len(petitioner.assets) > 3:
          ${ petitioner.assets[3].has_possession == respondent.name.full() }
          % endif
      - "petitioner_amount_owed_property4_no": |
          % if len(petitioner.assets) > 3:
          ${ not defined("petitioner.assets[3].is_amount_owed") or not petitioner.assets[3].is_amount_owed }
          % endif
      - "petitioner_property4_both": |
          % if len(petitioner.assets) > 3:
          ${ petitioner.assets[3].marital_property == "Both" }
          % endif
      - "petitioner_property4_possession_other": |
          % if len(petitioner.assets) > 3:
          ${ petitioner.assets[3].has_possession == "other" }
          % endif
      - "petitioner_property_item4": |
          % if len(petitioner.assets) > 3:
          ${ petitioner.assets[3].description }
          % endif
      - "petitioner_property5_marital": |
          % if len(petitioner.assets) > 4:
          ${ petitioner.assets[4].marital_property == "Marital" }
          % endif
      - "petitioner_amount_owed_property5_yes": |
          % if len(petitioner.assets) > 4:
          ${ petitioner.assets[4].is_amount_owed }
          % endif
      - "petitioner_property5_possession_petitioner": |
          % if len(petitioner.assets) > 4:
          ${ petitioner.assets[4].has_possession == petitioner.name.full() }
          % endif
      - "petitioner_market_value5": |
          % if len(petitioner.assets) > 4:
          ${ "{:.2f}".format(petitioner.assets[4].market_value) }
          % endif
      - "petitioner_property5_nonmarital": |
          % if len(petitioner.assets) > 4:
          ${ petitioner.assets[4].marital_property == "Nonmarital" }
          % endif
      - "petitioner_property5_possession_respondent": |
          % if len(petitioner.assets) > 4:
          ${ petitioner.assets[4].has_possession == respondent.name.full() }
          % endif
      - "petitioner_amount_owed_property5_no": |
          % if len(petitioner.assets) > 4:
          ${ not defined("petitioner.assets[4].is_amount_owed") or not petitioner.assets[4].is_amount_owed }
          % endif
      - "petitioner_property5_both": |
          % if len(petitioner.assets) > 4:
          ${ petitioner.assets[4].marital_property == "Both" }
          % endif
      - "petitioner_property5_possession_other": |
          % if len(petitioner.assets) > 4:
          ${ petitioner.assets[4].has_possession == "other" }
          % endif
      - "petitioner_property_item5": |
          % if len(petitioner.assets) > 4:
          ${ petitioner.assets[4].description }
          % endif
      - "petitioner_property6_marital": |
          % if len(petitioner.assets) > 5:
          ${ petitioner.assets[5].marital_property == "Marital" }
          % endif
      - "petitioner_amount_owed_property6_yes": |
          % if len(petitioner.assets) > 5:
          ${ petitioner.assets[5].is_amount_owed }
          % endif
      - "petitioner_property6_possession_petitioner": |
          % if len(petitioner.assets) > 5:
          ${ petitioner.assets[5].has_possession == petitioner.name.full() }
          % endif
      - "petitioner_market_value6": |
          % if len(petitioner.assets) > 5:
          ${ "{:.2f}".format(petitioner.assets[5].market_value) }
          % endif
      - "petitioner_property6_nonmarital": |
          % if len(petitioner.assets) > 5:
          ${ petitioner.assets[5].marital_property == "Nonmarital" }
          % endif
      - "petitioner_property6_possession_respondent": |
          % if len(petitioner.assets) > 5:
          ${ petitioner.assets[5].has_possession == respondent.name.full() }
          % endif
      - "petitioner_amount_owed_property6_no": |
          % if len(petitioner.assets) > 5:
          ${ not defined("petitioner.assets[5].is_amount_owed") or not petitioner.assets[5].is_amount_owed }
          % endif
      - "petitioner_property6_both": |
          % if len(petitioner.assets) > 5:
          ${ petitioner.assets[5].marital_property == "Both" }
          % endif
      - "petitioner_property6_possession_other": |
          % if len(petitioner.assets) > 5:
          ${ petitioner.assets[5].has_possession == "other" }
          % endif
      - "petitioner_property_item6": |
          % if len(petitioner.assets) > 5:
          ${ petitioner.assets[5].description }
          % endif
      - "petitioner_property7_marital": |
          % if len(petitioner.assets) > 6:
          ${ petitioner.assets[6].marital_property == "Marital" }
          % endif
      - "petitioner_amount_owed_property7_yes": |
          % if len(petitioner.assets) > 6:
          ${ petitioner.assets[6].is_amount_owed }
          % endif
      - "petitioner_property7_possession_petitioner": |
          % if len(petitioner.assets) > 6:
          ${ petitioner.assets[6].has_possession == petitioner.name.full() }
          % endif
      - "petitioner_market_value7": |
          % if len(petitioner.assets) > 6:
          ${ "{:.2f}".format(petitioner.assets[6].market_value) }
          % endif
      - "petitioner_property7_nonmarital": |
          % if len(petitioner.assets) > 6:
          ${ petitioner.assets[6].marital_property == "Nonmarital" }
          % endif
      - "petitioner_property7_possession_respondent": |
          % if len(petitioner.assets) > 6:
          ${ petitioner.assets[6].has_possession == respondent.name.full() }
          % endif
      - "petitioner_amount_owed_property7_no": |
          % if len(petitioner.assets) > 6:
          ${ not defined("petitioner.assets[6].is_amount_owed") or not petitioner.assets[6].is_amount_owed }
          % endif
      - "petitioner_property7_both": |
          % if len(petitioner.assets) > 6:
          ${ petitioner.assets[6].marital_property == "Both" }
          % endif
      - "petitioner_property7_possession_other": |
          % if len(petitioner.assets) > 6:
          ${ petitioner.assets[6].has_possession == "other" }
          % endif
      - "petitioner_property_item7": |
          % if len(petitioner.assets) > 6:
          ${ petitioner.assets[6].description }
          % endif
      - "petitioner_property8_marital": |
          % if len(petitioner.assets) > 7:
          ${ petitioner.assets[7].marital_property == "Marital" }
          % endif
      - "petitioner_amount_owed_property8_yes": |
          % if len(petitioner.assets) > 7:
          ${ petitioner.assets[7].is_amount_owed }
          % endif
      - "petitioner_property8_possession_petitioner": |
          % if len(petitioner.assets) > 7:
          ${ petitioner.assets[7].has_possession == petitioner.name.full() }
          % endif
      - "petitioner_market_value8": |
          % if len(petitioner.assets) > 7:
          ${ "{:.2f}".format(petitioner.assets[7].market_value) }
          % endif
      - "petitioner_property8_nonmarital": |
          % if len(petitioner.assets) > 7:
          ${ petitioner.assets[7].marital_property == "Nonmarital" }
          % endif
      - "petitioner_property8_possession_respondent": |
          % if len(petitioner.assets) > 7:
          ${ petitioner.assets[7].has_possession == respondent.name.full() }
          % endif
      - "petitioner_amount_owed_property8_no": |
          % if len(petitioner.assets) > 7:
          ${ not defined("petitioner.assets[7].is_amount_owed") or not petitioner.assets[7].is_amount_owed }
          % endif
      - "petitioner_property8_both": |
          % if len(petitioner.assets) > 7:
          ${ petitioner.assets[7].marital_property == "Both" }
          % endif
      - "petitioner_property8_possession_other": |
          % if len(petitioner.assets) > 7:
          ${ petitioner.assets[7].has_possession == "other" }
          % endif
      - "petitioner_property_item8": |
          % if len(petitioner.assets) > 7:
          ${ petitioner.assets[7].description }
          % endif
      - "petitioner_property9_marital": |
          % if len(petitioner.assets) > 8:
          ${ petitioner.assets[8].marital_property == "Marital" }
          % endif
      - "petitioner_amount_owed_property9_yes": |
          % if len(petitioner.assets) > 8:
          ${ petitioner.assets[8].is_amount_owed }
          % endif
      - "petitioner_property9_possession_petitioner": |
          % if len(petitioner.assets) > 8:
          ${ petitioner.assets[8].has_possession == petitioner.name.full() }
          % endif
      - "petitioner_market_value9": |
          % if len(petitioner.assets) > 8:
          ${ "{:.2f}".format(petitioner.assets[8].market_value) }
          % endif
      - "petitioner_property9_nonmarital": |
          % if len(petitioner.assets) > 8:
          ${ petitioner.assets[8].marital_property == "Nonmarital" }
          % endif
      - "petitioner_property9_possession_respondent": |
          % if len(petitioner.assets) > 8:
          ${ petitioner.assets[8].has_possession == respondent.name.full() }
          % endif
      - "petitioner_amount_owed_property9_no": |
          % if len(petitioner.assets) > 8:
          ${ not defined("petitioner.assets[8].is_amount_owed") or not petitioner.assets[8].is_amount_owed }
          % endif
      - "petitioner_property9_both": |
          % if len(petitioner.assets) > 8:
          ${ petitioner.assets[8].marital_property == "Both" }
          % endif
      - "petitioner_property9_possession_other": |
          % if len(petitioner.assets) > 8:
          ${ petitioner.assets[8].has_possession == "other" }
          % endif
      - "petitioner_property_item9": |
          % if len(petitioner.assets) > 8:
          ${ petitioner.assets[8].description }
          % endif
      - "petitioner_property10_marital": |
          % if len(petitioner.assets) > 9:
          ${ petitioner.assets[9].marital_property == "Marital" }
          % endif
      - "petitioner_amount_owed_property10_yes": |
          % if len(petitioner.assets) > 9:
          ${ petitioner.assets[9].is_amount_owed }
          % endif
      - "petitioner_property10_possession_petitioner": |
          % if len(petitioner.assets) > 9:
          ${ petitioner.assets[9].has_possession == petitioner.name.full() }
          % endif
      - "petitioner_market_value10": |
          % if len(petitioner.assets) > 9:
          ${ "{:.2f}".format(petitioner.assets[9].market_value) }
          % endif
      - "petitioner_property10_nonmarital": |
          % if len(petitioner.assets) > 9:
          ${ petitioner.assets[9].marital_property == "Nonmarital" }
          % endif
      - "petitioner_property10_possession_respondent": |
          % if len(petitioner.assets) > 9:
          ${ petitioner.assets[9].has_possession == respondent.name.full() }
          % endif
      - "petitioner_amount_owed_property10_no": |
          % if len(petitioner.assets) > 9:
          ${ not defined("petitioner.assets[9].is_amount_owed") or not petitioner.assets[9].is_amount_owed }
          % endif
      - "petitioner_property10_both": |
          % if len(petitioner.assets) > 9:
          ${ petitioner.assets[9].marital_property == "Both" }
          % endif
      - "petitioner_property10_possession_other": |
          % if len(petitioner.assets) > 9:
          ${ petitioner.assets[9].has_possession == "other" }
          % endif
      - "petitioner_property_item10": |
          % if len(petitioner.assets) > 9:
          ${ petitioner.assets[9].description }
          % endif
      - "petitioner_property11_marital": |
          % if len(petitioner.assets) > 10:
          ${ petitioner.assets[10].marital_property == "Marital" }
          % endif
      - "petitioner_amount_owed_property11_yes": |
          % if len(petitioner.assets) > 10:
          ${ petitioner.assets[10].is_amount_owed }
          % endif
      - "petitioner_property11_possession_petitioner": |
          % if len(petitioner.assets) > 10:
          ${ petitioner.assets[10].has_possession == petitioner.name.full() }
          % endif
      - "petitioner_market_value11": |
          % if len(petitioner.assets) > 10:
          ${ "{:.2f}".format(petitioner.assets[10].market_value) }
          % endif
      - "petitioner_property11_nonmarital": |
          % if len(petitioner.assets) > 10:
          ${ petitioner.assets[10].marital_property == "Nonmarital" }
          % endif
      - "petitioner_property11_possession_respondent": |
          % if len(petitioner.assets) > 10:
          ${ petitioner.assets[10].has_possession == respondent.name.full() }
          % endif
      - "petitioner_amount_owed_property11_no": |
          % if len(petitioner.assets) > 10:
          ${ not defined("petitioner.assets[10].is_amount_owed") or not petitioner.assets[10].is_amount_owed }
          % endif
      - "petitioner_property11_both": |
          % if len(petitioner.assets) > 10:
          ${ petitioner.assets[10].marital_property == "Both" }
          % endif
      - "petitioner_property11_possession_other": |
          % if len(petitioner.assets) > 10:
          ${ petitioner.assets[10].has_possession == "other" }
          % endif
      - "petitioner_property_item11": |
          % if len(petitioner.assets) > 10:
          ${ petitioner.assets[10].description }
          % endif
      - "petitioner_property12_marital": |
          % if len(petitioner.assets) > 11:
          ${ petitioner.assets[11].marital_property == "Marital" }
          % endif
      - "petitioner_amount_owed_property12_yes": |
          % if len(petitioner.assets) > 11:
          ${ petitioner.assets[11].is_amount_owed }
          % endif
      - "petitioner_property12_possession_petitioner": |
          % if len(petitioner.assets) > 11:
          ${ petitioner.assets[11].has_possession == petitioner.name.full() }
          % endif
      - "petitioner_market_value12": |
          % if len(petitioner.assets) > 11:
          ${ "{:.2f}".format(petitioner.assets[11].market_value) }
          % endif
      - "petitioner_property12_nonmarital": |
          % if len(petitioner.assets) > 11:
          ${ petitioner.assets[11].marital_property == "Nonmarital" }
          % endif
      - "petitioner_property12_possession_respondent": |
          % if len(petitioner.assets) > 11:
          ${ petitioner.assets[11].has_possession == respondent.name.full() }
          % endif
      - "petitioner_amount_owed_property12_no": |
          % if len(petitioner.assets) > 11:
          ${ not defined("petitioner.assets[11].is_amount_owed") or not petitioner.assets[11].is_amount_owed }
          % endif
      - "petitioner_property12_both": |
          % if len(petitioner.assets) > 11:
          ${ petitioner.assets[11].marital_property == "Both" }
          % endif
      - "petitioner_property12_possession_other": |
          % if len(petitioner.assets) > 11:
          ${ petitioner.assets[11].has_possession == "other" }
          % endif
      - "petitioner_property_item12": |
          % if len(petitioner.assets) > 11:
          ${ petitioner.assets[11].description }
          % endif
      - "petitioner_property13_marital": |
          % if len(petitioner.assets) > 12:
          ${ petitioner.assets[12].marital_property == "Marital" }
          % endif
      - "petitioner_amount_owed_property13_yes": |
          % if len(petitioner.assets) > 12:
          ${ petitioner.assets[12].is_amount_owed }
          % endif
      - "petitioner_property13_possession_petitioner": |
          % if len(petitioner.assets) > 12:
          ${ petitioner.assets[12].has_possession == petitioner.name.full() }
          % endif
      - "petitioner_market_value13": |
          % if len(petitioner.assets) > 12:
          ${ "{:.2f}".format(petitioner.assets[12].market_value) }
          % endif
      - "petitioner_property13_nonmarital": |
          % if len(petitioner.assets) > 12:
          ${ petitioner.assets[12].marital_property == "Nonmarital" }
          % endif
      - "petitioner_property13_possession_respondent": |
          % if len(petitioner.assets) > 12:
          ${ petitioner.assets[12].has_possession == respondent.name.full() }
          % endif
      - "petitioner_amount_owed_property13_no": |
          % if len(petitioner.assets) > 12:
          ${ not defined("petitioner.assets[12].is_amount_owed") or not petitioner.assets[12].is_amount_owed }
          % endif
      - "petitioner_property13_both": |
          % if len(petitioner.assets) > 12:
          ${ petitioner.assets[12].marital_property == "Both" }
          % endif
      - "petitioner_property13_possession_other": |
          % if len(petitioner.assets) > 12:
          ${ petitioner.assets[12].has_possession == "other" }
          % endif
      - "petitioner_property_item13": |
          % if len(petitioner.assets) > 12:
          ${ petitioner.assets[12].description }
          % endif
      - "petitioner_property14_marital": |
          % if len(petitioner.assets) > 13:
          ${ petitioner.assets[13].marital_property == "Marital" }
          % endif
      - "petitioner_amount_owed_property14_yes": |
          % if len(petitioner.assets) > 13:
          ${ petitioner.assets[13].is_amount_owed }
          % endif
      - "petitioner_property14_possession_petitioner": |
          % if len(petitioner.assets) > 13:
          ${ petitioner.assets[13].has_possession == petitioner.name.full() }
          % endif
      - "petitioner_market_value14": |
          % if len(petitioner.assets) > 13:
          ${ "{:.2f}".format(petitioner.assets[13].market_value) }
          % endif
      - "petitioner_property14_nonmarital": |
          % if len(petitioner.assets) > 13:
          ${ petitioner.assets[13].marital_property == "Nonmarital" }
          % endif
      - "petitioner_property14_possession_respondent": |
          % if len(petitioner.assets) > 13:
          ${ petitioner.assets[13].has_possession == respondent.name.full() }
          % endif
      - "petitioner_amount_owed_property14_no": |
          % if len(petitioner.assets) > 13:
          ${ not defined("petitioner.assets[13].is_amount_owed") or not petitioner.assets[13].is_amount_owed }
          % endif
      - "petitioner_property14_both": |
          % if len(petitioner.assets) > 13:
          ${ petitioner.assets[13].marital_property == "Both" }
          % endif
      - "petitioner_property14_possession_other": |
          % if len(petitioner.assets) > 13:
          ${ petitioner.assets[13].has_possession == "other" }
          % endif
      - "petitioner_property_item14": |
          % if len(petitioner.assets) > 13:
          ${ petitioner.assets[13].description }
          % endif
      - "petitioner_property15_marital": |
          % if len(petitioner.assets) > 14:
          ${ petitioner.assets[14].marital_property == "Marital" }
          % endif
      - "petitioner_amount_owed_property15_yes": |
          % if len(petitioner.assets) > 14:
          ${ petitioner.assets[14].is_amount_owed }
          % endif
      - "petitioner_property15_possession_petitioner": |
          % if len(petitioner.assets) > 14:
          ${ petitioner.assets[14].has_possession == petitioner.name.full() }
          % endif
      - "petitioner_market_value15": |
          % if len(petitioner.assets) > 14:
          ${ "{:.2f}".format(petitioner.assets[14].market_value) }
          % endif
      - "petitioner_property15_nonmarital": |
          % if len(petitioner.assets) > 14:
          ${ petitioner.assets[14].marital_property == "Nonmarital" }
          % endif
      - "petitioner_property15_possession_respondent": |
          % if len(petitioner.assets) > 14:
          ${ petitioner.assets[14].has_possession == respondent.name.full() }
          % endif
      - "petitioner_amount_owed_property15_no": |
          % if len(petitioner.assets) > 14:
          ${ not defined("petitioner.assets[14].is_amount_owed") or not petitioner.assets[14].is_amount_owed }
          % endif
      - "petitioner_property15_both": |
          % if len(petitioner.assets) > 14:
          ${ petitioner.assets[14].marital_property == "Both" }
          % endif
      - "petitioner_property15_possession_other": |
          % if len(petitioner.assets) > 14:
          ${ petitioner.assets[14].has_possession == "other" }
          % endif
      - "petitioner_property_item15": |
          % if len(petitioner.assets) > 14:
          ${ petitioner.assets[14].description }
          % endif
      - "petitioner_amount_owed_property16_yes": |
          % if len(petitioner.assets) > 15:
          ${ petitioner.assets[15].is_amount_owed }
          % endif
      - "petitioner_property16_marital": |
          % if len(petitioner.assets) > 15:
          ${ petitioner.assets[15].marital_property == "Marital" }
          % endif
      - "petitioner_property16_possession_petitioner": |
          % if len(petitioner.assets) > 15:
          ${ petitioner.assets[15].has_possession == petitioner.name.full() }
          % endif
      - "petitioner_market_value16": |
          % if len(petitioner.assets) > 15:
          ${ "{:.2f}".format(petitioner.assets[15].market_value) }
          % endif
      - "petitioner_property16_nonmarital": |
          % if len(petitioner.assets) > 15:
          ${ petitioner.assets[15].marital_property == "Nonmarital" }
          % endif
      - "petitioner_property16_possession_respondent": |
          % if len(petitioner.assets) > 15:
          ${ petitioner.assets[15].has_possession == respondent.name.full() }
          % endif
      - "petitioner_amount_owed_property16_no": |
          % if len(petitioner.assets) > 15:
          ${ not defined("petitioner.assets[15].is_amount_owed") or not petitioner.assets[15].is_amount_owed }
          % endif
      - "petitioner_property16_both": |
          % if len(petitioner.assets) > 15:
          ${ petitioner.assets[15].marital_property == "Both" }
          % endif
      - "petitioner_property16_possession_other": |
          % if len(petitioner.assets) > 15:
          ${ petitioner.assets[15].has_possession == "other" }
          % endif
      - "petitioner_property_item16": |
          % if len(petitioner.assets) > 15:
          ${ petitioner.assets[15].description }
          % endif
      - "respondent_property1_marital": |
          % if len(respondent.assets) > 0:
          ${ respondent.assets[0].marital_property == "Marital" }
          % endif
      - "respondent_property1_possession_petitioner": |
          % if len(respondent.assets) > 0:
          ${ respondent.assets[0].has_possession == petitioner.name.full() }
          % endif
      - "respondent_amount_owed_property1_yes": |
          % if len(respondent.assets) > 0:
          ${ respondent.assets[0].is_amount_owed }
          % endif
      - "respondent_market_value1": |
          % if len(respondent.assets) > 0:
          ${ "{:.2f}".format(respondent.assets[0].market_value) }
          % endif
      - "respondent_property1_nonmarital": |
          % if len(respondent.assets) > 0:
          ${ respondent.assets[0].marital_property == "Nonmarital" }
          % endif
      - "respondent_property1_possession_respondent": |
          % if len(respondent.assets) > 0:
          ${ respondent.assets[0].has_possession == respondent.name.full() }
          % endif
      - "respondent_property1_other": |
          % if len(respondent.assets) > 0:
          ${ respondent.assets[0].has_possession == "other" }
          % endif
      - "respondent_amount_owed_property1_no": |
          % if len(respondent.assets) > 0:
          ${ not defined("respondent.assets[0].is_amount_owed") or not respondent.assets[0].is_amount_owed }
          % endif
      - "respondent_property1_both": |
          % if len(respondent.assets) > 0:
          ${ respondent.assets[0].marital_property == "Both" }
          % endif
      - "respondent_property_item1": |
          % if len(respondent.assets) > 0:
          ${ respondent.assets[0].description }
          % endif
      - "respondent_property2_marital": |
          % if len(respondent.assets) > 1:
          ${ respondent.assets[1].marital_property == "Marital" }
          % endif
      - "respondent_property2_possession_petitioner": |
          % if len(respondent.assets) > 1:
          ${ respondent.assets[1].has_possession == petitioner.name.full() }
          % endif
      - "respondent_amount_owed_property2_yes": |
          % if len(respondent.assets) > 1:
          ${ respondent.assets[1].is_amount_owed }
          % endif
      - "respondent_market_value2": |
          % if len(respondent.assets) > 1:
          ${ "{:.2f}".format(respondent.assets[1].market_value) }
          % endif
      - "respondent_property2_nonmarital": |
          % if len(respondent.assets) > 1:
          ${ respondent.assets[1].marital_property == "Nonmarital" }
          % endif
      - "respondent_property2_possession_respondent": |
          % if len(respondent.assets) > 1:
          ${ respondent.assets[1].has_possession == respondent.name.full() }
          % endif
      - "respondent_property2_other": |
          % if len(respondent.assets) > 1:
          ${ respondent.assets[1].has_possession == "other" }
          % endif
      - "respondent_amount_owed_property2_no": |
          % if len(respondent.assets) > 1:
          ${ not defined("respondent.assets[1].is_amount_owed") or not respondent.assets[1].is_amount_owed }
          % endif
      - "respondent_property2_both": |
          % if len(respondent.assets) > 1:
          ${ respondent.assets[1].marital_property == "Both" }
          % endif
      - "respondent_property_item2": |
          % if len(respondent.assets) > 1:
          ${ respondent.assets[1].description }
          % endif
      - "respondent_property3_marital": |
          % if len(respondent.assets) > 2:
          ${ respondent.assets[2].marital_property == "Marital" }
          % endif
      - "respondent_property3_possession_petitioner": |
          % if len(respondent.assets) > 2:
          ${ respondent.assets[2].has_possession == petitioner.name.full() }
          % endif
      - "respondent_amount_owed_property3_yes": |
          % if len(respondent.assets) > 2:
          ${ respondent.assets[2].is_amount_owed }
          % endif
      - "respondent_market_value3": |
          % if len(respondent.assets) > 2:
          ${ "{:.2f}".format(respondent.assets[2].market_value) }
          % endif
      - "respondent_property3_nonmarital": |
          % if len(respondent.assets) > 2:
          ${ respondent.assets[2].marital_property == "Nonmarital" }
          % endif
      - "respondent_property3_possession_respondent": |
          % if len(respondent.assets) > 2:
          ${ respondent.assets[2].has_possession == respondent.name.full() }
          % endif
      - "respondent_property3_other": |
          % if len(respondent.assets) > 2:
          ${ respondent.assets[2].has_possession == "other" }
          % endif
      - "respondent_amount_owed_property3_no": |
          % if len(respondent.assets) > 2:
          ${ not defined("respondent.assets[2].is_amount_owed") or not respondent.assets[2].is_amount_owed }
          % endif
      - "respondent_property3_both": |
          % if len(respondent.assets) > 2:
          ${ respondent.assets[2].marital_property == "Both" }
          % endif
      - "respondent_property_item3": |
          % if len(respondent.assets) > 2:
          ${ respondent.assets[2].description }
          % endif
      - "respondent_property4_marital": |
          % if len(respondent.assets) > 3:
          ${ respondent.assets[3].marital_property == "Marital" }
          % endif
      - "respondent_property4_possession_petitioner": |
          % if len(respondent.assets) > 3:
          ${ respondent.assets[3].has_possession == petitioner.name.full() }
          % endif
      - "respondent_amount_owed_property4_yes": |
          % if len(respondent.assets) > 3:
          ${ respondent.assets[3].is_amount_owed }
          % endif
      - "respondent_market_value4": |
          % if len(respondent.assets) > 3:
          ${ "{:.2f}".format(respondent.assets[3].market_value) }
          % endif
      - "respondent_property4_nonmarital": |
          % if len(respondent.assets) > 3:
          ${ respondent.assets[3].marital_property == "Nonmarital" }
          % endif
      - "respondent_property4_possession_respondent": |
          % if len(respondent.assets) > 3:
          ${ respondent.assets[3].has_possession == respondent.name.full() }
          % endif
      - "respondent_amount_owed_property4_no": |
          % if len(respondent.assets) > 3:
          ${ not defined("respondent.assets[3].is_amount_owed") or not respondent.assets[3].is_amount_owed }
          % endif
      - "respondent_property4_other": |
          % if len(respondent.assets) > 3:
          ${ respondent.assets[3].has_possession == "other" }
          % endif
      - "respondent_property4_both": |
          % if len(respondent.assets) > 3:
          ${ respondent.assets[3].marital_property == "Both" }
          % endif
      - "respondent_property_item4": |
          % if len(respondent.assets) > 3:
          ${ respondent.assets[3].description }
          % endif
      - "respondent_property5_marital": |
          % if len(respondent.assets) > 4:
          ${ respondent.assets[4].marital_property == "Marital" }
          % endif
      - "respondent_property5_possession_petitioner": |
          % if len(respondent.assets) > 4:
          ${ respondent.assets[4].has_possession == petitioner.name.full() }
          % endif
      - "respondent_amount_owed_property5_yes": |
          % if len(respondent.assets) > 4:
          ${ respondent.assets[4].is_amount_owed }
          % endif
      - "respondent_property5_possession_respondent": |
          % if len(respondent.assets) > 4:
          ${ respondent.assets[4].has_possession == respondent.name.full() }
          % endif
      - "respondent_market_value5": |
          % if len(respondent.assets) > 4:
          ${ "{:.2f}".format(respondent.assets[4].market_value) }
          % endif
      - "respondent_property5_nonmarital": |
          % if len(respondent.assets) > 4:
          ${ respondent.assets[4].marital_property == "Nonmarital" }
          % endif
      - "respondent_amount_owed_property5_no": |
          % if len(respondent.assets) > 4:
          ${ not defined("respondent.assets[4].is_amount_owed") or not respondent.assets[4].is_amount_owed }
          % endif
      - "respondent_property5_other": |
          % if len(respondent.assets) > 4:
          ${ respondent.assets[4].has_possession == "other" }
          % endif
      - "respondent_property5_both": |
          % if len(respondent.assets) > 4:
          ${ respondent.assets[4].marital_property == "Both" }
          % endif
      - "respondent_property_item5": |
          % if len(respondent.assets) > 4:
          ${ respondent.assets[4].description }
          % endif
      - "respondent_property6_marital": |
          % if len(respondent.assets) > 5:
          ${ respondent.assets[5].marital_property == "Marital" }
          % endif
      - "respondent_property6_possession_petitioner": |
          % if len(respondent.assets) > 5:
          ${ respondent.assets[5].has_possession == petitioner.name.full() }
          % endif
      - "respondent_amount_owed_property6_yes": |
          % if len(respondent.assets) > 5:
          ${ respondent.assets[5].is_amount_owed }
          % endif
      - "respondent_market_value6": |
          % if len(respondent.assets) > 5:
          ${ "{:.2f}".format(respondent.assets[5].market_value) }
          % endif
      - "respondent_property6_possession_respondent": |
          % if len(respondent.assets) > 5:
          ${ respondent.assets[5].has_possession == respondent.name.full() }
          % endif
      - "respondent_property6_nonmarital": |
          % if len(respondent.assets) > 5:
          ${ respondent.assets[5].marital_property == "Nonmarital" }
          % endif
      - "respondent_amount_owed_property6_no": |
          % if len(respondent.assets) > 5:
          ${ not defined("respondent.assets[5].is_amount_owed") or not respondent.assets[5].is_amount_owed }
          % endif
      - "respondent_property6_other": |
          % if len(respondent.assets) > 5:
          ${ respondent.assets[5].has_possession == "other" }
          % endif
      - "respondent_property6_both": |
          % if len(respondent.assets) > 5:
          ${ respondent.assets[5].marital_property == "Both" }
          % endif
      - "respondent_property_item6": |
          % if len(respondent.assets) > 5:
          ${ respondent.assets[5].description }
          % endif
      - "respondent_property7_marital": |
          % if len(respondent.assets) > 6:
          ${ respondent.assets[6].marital_property == "Marital" }
          % endif
      - "respondent_property7_possession_petitioner": |
          % if len(respondent.assets) > 6:
          ${ respondent.assets[6].has_possession == petitioner.name.full() }
          % endif
      - "respondent_amount_owed_property7_yes": |
          % if len(respondent.assets) > 6:
          ${ respondent.assets[6].is_amount_owed }
          % endif
      - "respondent_property7_possession_respondent": |
          % if len(respondent.assets) > 6:
          ${ respondent.assets[6].has_possession == respondent.name.full() }
          % endif
      - "respondent_market_value7": |
          % if len(respondent.assets) > 6:
          ${ "{:.2f}".format(respondent.assets[6].market_value) }
          % endif
      - "respondent_property7_nonmarital": |
          % if len(respondent.assets) > 6:
          ${ respondent.assets[6].marital_property == "Nonmarital" }
          % endif
      - "respondent_amount_owed_property7_no": |
          % if len(respondent.assets) > 6:
          ${ not defined("respondent.assets[6].is_amount_owed") or not respondent.assets[6].is_amount_owed }
          % endif
      - "respondent_property7_other": |
          % if len(respondent.assets) > 6:
          ${ respondent.assets[6].has_possession == "other" }
          % endif
      - "respondent_property7_both": |
          % if len(respondent.assets) > 6:
          ${ respondent.assets[6].marital_property == "Both" }
          % endif
      - "respondent_property_item7": |
          % if len(respondent.assets) > 6:
          ${ respondent.assets[6].description }
          % endif
      - "respondent_property8_marital": |
          % if len(respondent.assets) > 7:
          ${ respondent.assets[7].marital_property == "Marital" }
          % endif
      - "respondent_property8_possession_petitioner": |
          % if len(respondent.assets) > 7:
          ${ respondent.assets[7].has_possession == petitioner.name.full() }
          % endif
      - "respondent_amount_owed_property8_yes": |
          % if len(respondent.assets) > 7:
          ${ respondent.assets[7].is_amount_owed }
          % endif
      - "respondent_property8_possession_respondent": |
          % if len(respondent.assets) > 7:
          ${ respondent.assets[7].has_possession == respondent.name.full() }
          % endif
      - "respondent_market_value8": |
          % if len(respondent.assets) > 7:
          ${ "{:.2f}".format(respondent.assets[7].market_value) }
          % endif
      - "respondent_property8_nonmarital": |
          % if len(respondent.assets) > 7:
          ${ respondent.assets[7].marital_property == "Nonmarital" }
          % endif
      - "respondent_amount_owed_property8_no": |
          % if len(respondent.assets) > 7:
          ${ not defined("respondent.assets[7].is_amount_owed") or not respondent.assets[7].is_amount_owed }
          % endif
      - "respondent_property8_other": |
          % if len(respondent.assets) > 7:
          ${ respondent.assets[7].has_possession == "other" }
          % endif
      - "respondent_property8_both": |
          % if len(respondent.assets) > 7:
          ${ respondent.assets[7].marital_property == "Both" }
          % endif
      - "respondent_property_item8": |
          % if len(respondent.assets) > 7:
          ${ respondent.assets[7].description }
          % endif
      - "respondent_property9_marital": |
          % if len(respondent.assets) > 8:
          ${ respondent.assets[8].marital_property == "Marital" }
          % endif
      - "respondent_property9_possession_petitioner": |
          % if len(respondent.assets) > 8:
          ${ respondent.assets[8].has_possession == petitioner.name.full() }
          % endif
      - "respondent_amount_owed_property9_yes": |
          % if len(respondent.assets) > 8:
          ${ respondent.assets[8].is_amount_owed }
          % endif
      - "respondent_property9_possession_respondent": |
          % if len(respondent.assets) > 8:
          ${ respondent.assets[8].has_possession == respondent.name.full() }
          % endif
      - "respondent_market_value9": |
          % if len(respondent.assets) > 8:
          ${ "{:.2f}".format(respondent.assets[8].market_value) }
          % endif
      - "respondent_property9_nonmarital": |
          % if len(respondent.assets) > 8:
          ${ respondent.assets[8].marital_property == "Nonmarital" }
          % endif
      - "respondent_amount_owed_property9_no": |
          % if len(respondent.assets) > 8:
          ${ not defined("respondent.assets[8].is_amount_owed") or not respondent.assets[8].is_amount_owed }
          % endif
      - "respondent_property9_other": |
          % if len(respondent.assets) > 8:
          ${ respondent.assets[8].has_possession == "other" }
          % endif
      - "respondent_property9_both": |
          % if len(respondent.assets) > 8:
          ${ respondent.assets[8].marital_property == "Both" }
          % endif
      - "respondent_property_item9": |
          % if len(respondent.assets) > 8:
          ${ respondent.assets[8].description }
          % endif
      - "respondent_property10_marital": |
          % if len(respondent.assets) > 9:
          ${ respondent.assets[9].marital_property == "Marital" }
          % endif
      - "respondent_property10_possession_petitioner": |
          % if len(respondent.assets) > 9:
          ${ respondent.assets[9].has_possession == petitioner.name.full() }
          % endif
      - "respondent_amount_owed_property10_yes": |
          % if len(respondent.assets) > 9:
          ${ respondent.assets[9].is_amount_owed }
          % endif
      - "respondent_market_value10": |
          % if len(respondent.assets) > 9:
          ${ "{:.2f}".format(respondent.assets[9].market_value) }
          % endif
      - "respondent_property10_possession_respondent": |
          % if len(respondent.assets) > 9:
          ${ respondent.assets[9].has_possession == respondent.name.full() }
          % endif
      - "respondent_property10_nonmarital": |
          % if len(respondent.assets) > 9:
          ${ respondent.assets[9].marital_property == "Nonmarital" }
          % endif
      - "respondent_amount_owed_property10_no": |
          % if len(respondent.assets) > 9:
          ${ not defined("respondent.assets[9].is_amount_owed") or not respondent.assets[9].is_amount_owed }
          % endif
      - "respondent_property10_other": |
          % if len(respondent.assets) > 9:
          ${ respondent.assets[9].has_possession == "other" }
          % endif
      - "respondent_property10_both": |
          % if len(respondent.assets) > 9:
          ${ respondent.assets[9].marital_property == "Both" }
          % endif
      - "respondent_property_item10": |
          % if len(respondent.assets) > 9:
          ${ respondent.assets[9].description }
          % endif
      - "respondent_property11_marital": |
          % if len(respondent.assets) > 10:
          ${ respondent.assets[10].marital_property == "Marital" }
          % endif
      - "respondent_property11_possession_petitioner": |
          % if len(respondent.assets) > 10:
          ${ respondent.assets[10].has_possession == petitioner.name.full() }
          % endif
      - "respondent_amount_owed_property11_yes": |
          % if len(respondent.assets) > 10:
          ${ respondent.assets[10].is_amount_owed }
          % endif
      - "respondent_property11_possession_respondent": |
          % if len(respondent.assets) > 10:
          ${ respondent.assets[10].has_possession == respondent.name.full() }
          % endif
      - "respondent_market_value11": |
          % if len(respondent.assets) > 10:
          ${ "{:.2f}".format(respondent.assets[10].market_value) }
          % endif
      - "respondent_property11_nonmarital": |
          % if len(respondent.assets) > 10:
          ${ respondent.assets[10].marital_property == "Nonmarital" }
          % endif
      - "respondent_amount_owed_property11_no": |
          % if len(respondent.assets) > 10:
          ${ not defined("respondent.assets[10].is_amount_owed") or not respondent.assets[10].is_amount_owed }
          % endif
      - "respondent_property11_other": |
          % if len(respondent.assets) > 10:
          ${ respondent.assets[10].has_possession == "other" }
          % endif
      - "respondent_property11_both": |
          % if len(respondent.assets) > 10:
          ${ respondent.assets[10].marital_property == "Both" }
          % endif
      - "respondent_property_item11": |
          % if len(respondent.assets) > 10:
          ${ respondent.assets[10].description }
          % endif
      - "respondent_property12_marital": |
          % if len(respondent.assets) > 11:
          ${ respondent.assets[11].marital_property == "Marital" }
          % endif
      - "respondent_property12_possession_petitioner": |
          % if len(respondent.assets) > 11:
          ${ respondent.assets[11].has_possession == petitioner.name.full() }
          % endif
      - "respondent_amount_owed_property12_yes": |
          % if len(respondent.assets) > 11:
          ${ respondent.assets[11].is_amount_owed }
          % endif
      - "respondent_property12_nonmarital": |
          % if len(respondent.assets) > 11:
          ${ respondent.assets[11].marital_property == "Nonmarital" }
          % endif
      - "respondent_property12_possession_respondent": |
          % if len(respondent.assets) > 11:
          ${ respondent.assets[11].has_possession == respondent.name.full() }
          % endif
      - "respondent_market_value12": |
          % if len(respondent.assets) > 11:
          ${ "{:.2f}".format(respondent.assets[11].market_value) }
          % endif
      - "respondent_amount_owed_property12_no": |
          % if len(respondent.assets) > 11:
          ${ not defined("respondent.assets[11].is_amount_owed") or not respondent.assets[11].is_amount_owed }
          % endif
      - "respondent_property12_other": |
          % if len(respondent.assets) > 11:
          ${ respondent.assets[11].has_possession == "other" }
          % endif
      - "respondent_property12_both": |
          % if len(respondent.assets) > 11:
          ${ respondent.assets[11].marital_property == "Both" }
          % endif
      - "respondent_property_item12": |
          % if len(respondent.assets) > 11:
          ${ respondent.assets[11].description }
          % endif
      - "respondent_property13_marital": |
          % if len(respondent.assets) > 12:
          ${ respondent.assets[12].marital_property == "Marital" }
          % endif
      - "respondent_property13_possession_petitioner": |
          % if len(respondent.assets) > 12:
          ${ respondent.assets[12].has_possession == petitioner.name.full() }
          % endif
      - "respondent_amount_owed_property13_yes": |
          % if len(respondent.assets) > 12:
          ${ respondent.assets[12].is_amount_owed }
          % endif
      - "respondent_property13_nonmarital": |
          % if len(respondent.assets) > 12:
          ${ respondent.assets[12].marital_property == "Nonmarital" }
          % endif
      - "respondent_property13_possession_respondent": |
          % if len(respondent.assets) > 12:
          ${ respondent.assets[12].has_possession == respondent.name.full() }
          % endif
      - "respondent_market_value13": |
          % if len(respondent.assets) > 12:
          ${ "{:.2f}".format(respondent.assets[12].market_value) }
          % endif
      - "respondent_amount_owed_property13_no": |
          % if len(respondent.assets) > 12:
          ${ not defined("respondent.assets[12].is_amount_owed") or not respondent.assets[12].is_amount_owed }
          % endif
      - "respondent_property13_other": |
          % if len(respondent.assets) > 12:
          ${ respondent.assets[12].has_possession == "other" }
          % endif
      - "respondent_property13_both": |
          % if len(respondent.assets) > 12:
          ${ respondent.assets[12].marital_property == "Both" }
          % endif
      - "respondent_property_item13": |
          % if len(respondent.assets) > 12:
          ${ respondent.assets[12].description }
          % endif
      - "respondent_property14_marital": |
          % if len(respondent.assets) > 13:
          ${ respondent.assets[13].marital_property == "Marital" }
          % endif
      - "respondent_property14_possession_petitioner": |
          % if len(respondent.assets) > 13:
          ${ respondent.assets[13].has_possession == petitioner.name.full() }
          % endif
      - "respondent_amount_owed_property14_yes": |
          % if len(respondent.assets) > 13:
          ${ respondent.assets[13].is_amount_owed }
          % endif
      - "respondent_market_value14": |
          % if len(respondent.assets) > 13:
          ${ "{:.2f}".format(respondent.assets[13].market_value) }
          % endif
      - "respondent_property14_nonmarital": |
          % if len(respondent.assets) > 13:
          ${ respondent.assets[13].marital_property == "Nonmarital" }
          % endif
      - "respondent_property14_possession_respondent": |
          % if len(respondent.assets) > 13:
          ${ respondent.assets[13].has_possession == respondent.name.full() }
          % endif
      - "respondent_amount_owed_property14_no": |
          % if len(respondent.assets) > 13:
          ${ not defined("respondent.assets[13].is_amount_owed") or not respondent.assets[13].is_amount_owed }
          % endif
      - "respondent_property14_other": |
          % if len(respondent.assets) > 13:
          ${ respondent.assets[13].has_possession == "other" }
          % endif
      - "respondent_property14_both": |
          % if len(respondent.assets) > 13:
          ${ respondent.assets[13].marital_property == "Both" }
          % endif
      - "respondent_property_item14": |
          % if len(respondent.assets) > 13:
          ${ respondent.assets[13].description }
          % endif
      - "respondent_property15_marital": |
          % if len(respondent.assets) > 14:
          ${ respondent.assets[14].marital_property == "Marital" }
          % endif
      - "respondent_property15_possession_petitioner": |
          % if len(respondent.assets) > 14:
          ${ respondent.assets[14].has_possession == petitioner.name.full() }
          % endif
      - "respondent_amount_owed_property15_yes": |
          % if len(respondent.assets) > 14:
          ${ respondent.assets[14].is_amount_owed }
          % endif
      - "respondent_property15_nonmarital": |
          % if len(respondent.assets) > 14:
          ${ respondent.assets[14].marital_property == "Nonmarital" }
          % endif
      - "respondent_property15_possession_respondent": |
          % if len(respondent.assets) > 14:
          ${ respondent.assets[14].has_possession == respondent.name.full() }
          % endif
      - "respondent_market_value15": |
          % if len(respondent.assets) > 14:
          ${ "{:.2f}".format(respondent.assets[14].market_value) }
          % endif
      - "respondent_amount_owed_property15_no": |
          % if len(respondent.assets) > 14:
          ${ not defined("respondent.assets[14].is_amount_owed") or not respondent.assets[14].is_amount_owed }
          % endif
      - "respondent_property15_other": |
          % if len(respondent.assets) > 14:
          ${ respondent.assets[14].has_possession == "other" }
          % endif
      - "respondent_property15_both": |
          % if len(respondent.assets) > 14:
          ${ respondent.assets[14].marital_property == "Both" }
          % endif
      - "respondent_property_item15": |
          % if len(respondent.assets) > 14:
          ${ respondent.assets[14].description }
          % endif
      - "respondent_property16_marital": |
          % if len(respondent.assets) > 15:
          ${ respondent.assets[15].marital_property == "Marital" }
          % endif
      - "respondent_property16_possession_petitioner": |
          % if len(respondent.assets) > 15:
          ${ respondent.assets[15].has_possession == petitioner.name.full() }
          % endif
      - "respondent_amount_owed_property16_yes": |
          % if len(respondent.assets) > 15:
          ${ respondent.assets[15].is_amount_owed }
          % endif
      - "respondent_property16_nonmarital": |
          % if len(respondent.assets) > 15:
          ${ respondent.assets[15].marital_property == "Nonmarital" }
          % endif
      - "respondent_property16_possession_respondent": |
          % if len(respondent.assets) > 15:
          ${ respondent.assets[15].has_possession == respondent.name.full() }
          % endif
      - "respondent_market_value16": |
          % if len(respondent.assets) > 15:
          ${ "{:.2f}".format(respondent.assets[15].market_value) }
          % endif
      - "respondent_amount_owed_property16_no": |
          % if len(respondent.assets) > 15:
          ${ not defined("respondent.assets[15].is_amount_owed") or not respondent.assets[15].is_amount_owed }
          % endif
      - "respondent_property16_both": |
          % if len(respondent.assets) > 15:
          ${ respondent.assets[15].marital_property == "Both" }
          % endif
      - "respondent_property16_other": |
          % if len(respondent.assets) > 15:
          ${ respondent.assets[15].has_possession == "other" }
          % endif
      - "respondent_property_item16": |
          % if len(respondent.assets) > 15:
          ${ respondent.assets[15].description }
          % endif

      - "petitioner_bankruptcy_no": ${ not petitioner.in_bankruptcy } 
      - "petitioner_bankruptcy_yes": ${ petitioner.in_bankruptcy } 
      - "petitioner_mortgage_yes": ${ len([item for item in petitioner.debts if defined('item.list') and item.list == "real_estate"]) > 0 } 
      - "petitioner_mortgage_no": ${ len([item for item in petitioner.debts if defined('item.list') and item.list == "real_estate"]) == 0 } 
      - "petitioner_car_payment_yes": ${ len([item for item in petitioner.debts if defined('item.list') and item.list == "vehicles"]) > 0 } 
      - "petitioner_car_payment_no": ${ len([item for item in petitioner.debts if defined('item.list') and item.list == "vehicles"]) == 0 } 
      - "petitioner_credit_card_payment_yes": ${ len([item for item in debts.matches(source=['credit_card_debt']) if item.recommended_debt ==  petitioner.name.full()]) > 0 } 
      - "petitioner_credit_card_payment_no": ${ len([item for item in debts.matches(source=['credit_card_debt']) if item.recommended_debt ==  petitioner.name.full()])== 0 } 
      - "petitioner_owe_family_friends_yes": ${ len([item for item in debts.matches(source=['personal_loans']) if item.recommended_debt ==  petitioner.name.full()]) > 0 } 
      - "petitioner_owe_family_friends_no": ${ len([item for item in debts.matches(source=['personal_loans']) if item.recommended_debt ==  petitioner.name.full()]) == 0 } 
      - "petitioner_owe_medical_dental_no": ${ len([item for item in debts.matches(source=['medical_debt']) if item.recommended_debt ==  petitioner.name.full()]) == 0 } 
      - "petitioner_owe_medical_dental_yes": ${ len([item for item in debts.matches(source=['medical_debt']) if item.recommended_debt ==  petitioner.name.full()]) > 0 } 
      - "petitioner_owe_student_loans_no": ${ len([item for item in debts.matches(source=['student_loans']) if item.recommended_debt ==  petitioner.name.full()]) == 0 } 
      - "petitioner_owe_student_loans_yes": ${ len([item for item in debts.matches(source=['student_loans']) if item.recommended_debt ==  petitioner.name.full()]) > 0 } 
      - "petitioner_owe_other_debt_no": ${ len([item for item in debts.matches(source=['other_debt']) if item.recommended_debt ==  petitioner.name.full()]) == 0 } 
      - "petitioner_owe_other_debt_yes": ${ len([item for item in debts.matches(source=['other_debt']) if item.recommended_debt ==  petitioner.name.full()]) > 0 } 
      - "respondent_bankruptcy_yes": ${ respondent.in_bankruptcy } 
      - "respondent_bankruptcy_no": ${ not respondent.in_bankruptcy } 
      - "respondent_mortgage_no": ${ len([item for item in respondent.debts if defined('item.list') and item.list == "real_estate"]) == 0 } 
      - "respondent_mortgage_yes": ${ len([item for item in respondent.debts if defined('item.list') and item.list == "real_estate"]) > 0 } 
      - "respondent_car_payment_yes": ${ len([item for item in respondent.debts if defined('item.list') and item.list == "vehicles"]) > 0 } 
      - "respondent_car_payment_no": ${ len([item for item in respondent.debts if defined('item.list') and item.list == "vehicles"]) == 0 } 
      - "respondent_credit_card_payment_yes": ${ len([item for item in debts.matches(source=['credit_card_debt']) if item.recommended_debt ==  respondent.name.full()]) > 0 } 
      - "respondent_credit_card_payment_no": ${ len([item for item in debts.matches(source=['credit_card_debt']) if item.recommended_debt ==  respondent.name.full()]) == 0 } 
      - "respondent_owe_family_friends_yes": ${ len([item for item in debts.matches(source=['personal_loans']) if item.recommended_debt ==  respondent.name.full()]) > 0 } 
      - "respondent_owe_family_friends_no": ${ len([item for item in debts.matches(source=['personal_loans']) if item.recommended_debt ==  respondent.name.full()]) == 0 } 
      - "respondent_owe_medical_dental_yes": ${ len([item for item in debts.matches(source=['medical_debt']) if item.recommended_debt ==  respondent.name.full()]) > 0 } 
      - "respondent_owe_medical_dental_no": ${ len([item for item in debts.matches(source=['medical_debt']) if item.recommended_debt ==  respondent.name.full()]) == 0 } 
      - "respondent_owe_student_loans_no": ${ len([item for item in debts.matches(source=['student_loans']) if item.recommended_debt ==  respondent.name.full()]) == 0 } 
      - "respondent_owe_student_loans_yes": ${ len([item for item in debts.matches(source=['student_loans']) if item.recommended_debt ==  respondent.name.full()]) > 0 } 
      - "respondent_owe_other_debt_no": ${ len([item for item in debts.matches(source=['other_debt']) if item.recommended_debt ==  respondent.name.full()]) == 0 } 
      - "respondent_owe_other_debt_yes": ${ len([item for item in debts.matches(source=['other_debt']) if item.recommended_debt ==  respondent.name.full()]) > 0 } 
      - "petitioner_debt_marital_1": |
          % if len(petitioner.debts) > 0:
          ${ petitioner.debts[0].marital_property == "Marital" }
          % endif
      - "petitioner_debt_nonmarital_1": |
          % if len(petitioner.debts) > 0:
          ${ petitioner.debts[0].marital_property == "Nonmarital" }
          % endif
      - "petitioner_debt_both_1": |
          % if len(petitioner.debts) > 0:
          ${ petitioner.debts[0].marital_property == "Both" }
          % endif
      - "petitioner_debt_1": |
          % if len(petitioner.debts) > 0:
          ${ petitioner.debts[0].lender }
          % endif
      - "petitioner_debt_balance_1": |
          % if len(petitioner.debts) > 0:
          ${ petitioner.debts[0].balance }
          % endif
      - "petitioner_monthly_payment_1": |
          % if len(petitioner.debts) > 0:
          ${ petitioner.debts[0].monthly_payment }
          % endif
      - "petitioner_debt_type_1": |
          % if len(petitioner.debts) > 0:
          ${ petitioner.debts[0].description }
          % endif
      - "petitioner_debt_marital_2": |
          % if len(petitioner.debts) > 1:
          ${ petitioner.debts[1].marital_property == "Marital" }
          % endif
      - "petitioner_debt_nonmarital_2": |
          % if len(petitioner.debts) > 1:
          ${ petitioner.debts[1].marital_property == "Nonmarital" }
          % endif
      - "petitioner_debt_both_2": |
          % if len(petitioner.debts) > 1:
          ${ petitioner.debts[1].marital_property == "Both" }
          % endif
      - "petitioner_debt_2": |
          % if len(petitioner.debts) > 1:
          ${ petitioner.debts[1].lender }
          % endif
      - "petitioner_debt_balance_2": |
          % if len(petitioner.debts) > 1:
          ${ petitioner.debts[1].balance }
          % endif
      - "petitioner_monthly_payment_2": |
          % if len(petitioner.debts) > 1:
          ${ petitioner.debts[1].monthly_payment }
          % endif
      - "petitioner_debt_type_2": |
          % if len(petitioner.debts) > 1:
          ${ petitioner.debts[1].description }
          % endif
      - "petitioner_debt_marital_3": |
          % if len(petitioner.debts) > 2:
          ${ petitioner.debts[2].marital_property == "Marital" }
          % endif
      - "petitioner_debt_nonmarital_3": |
          % if len(petitioner.debts) > 2:
          ${ petitioner.debts[2].marital_property == "Nonmarital" }
          % endif
      - "petitioner_debt_both_3": |
          % if len(petitioner.debts) > 2:
          ${ petitioner.debts[2].marital_property == "Both" }
          % endif
      - "petitioner_debt_3": |
          % if len(petitioner.debts) > 2:
          ${ petitioner.debts[2].lender }
          % endif
      - "petitioner_debt_balance_3": |
          % if len(petitioner.debts) > 2:
          ${ petitioner.debts[2].balance }
          % endif
      - "petitioner_monthly_payment_3": |
          % if len(petitioner.debts) > 2:
          ${ petitioner.debts[2].monthly_payment }
          % endif
      - "petitioner_debt_type_3": |
          % if len(petitioner.debts) > 2:
          ${ petitioner.debts[2].description }
          % endif
      - "petitioner_debt_marital_4": |
          % if len(petitioner.debts) > 3:
          ${ petitioner.debts[3].marital_property == "Marital" }
          % endif
      - "petitioner_debt_nonmarital_4": |
          % if len(petitioner.debts) > 3:
          ${ petitioner.debts[3].marital_property == "Nonmarital" }
          % endif
      - "petitioner_debt_both_4": |
          % if len(petitioner.debts) > 3:
          ${ petitioner.debts[3].marital_property == "Both" }
          % endif
      - "petitioner_debt_4": |
          % if len(petitioner.debts) > 3:
          ${ petitioner.debts[3].lender }
          % endif
      - "petitioner_debt_balance_4": |
          % if len(petitioner.debts) > 3:
          ${ petitioner.debts[3].balance }
          % endif
      - "petitioner_monthly_payment_4": |
          % if len(petitioner.debts) > 3:
          ${ petitioner.debts[3].monthly_payment }
          % endif
      - "petitioner_debt_type_4": |
          % if len(petitioner.debts) > 3:
          ${ petitioner.debts[3].description }
          % endif
      - "petitioner_debt_marital_5": |
          % if len(petitioner.debts) > 4:
          ${ petitioner.debts[4].marital_property == "Marital" }
          % endif
      - "petitioner_debt_nonmarital_4": |
          % if len(petitioner.debts) > 4:
          ${ petitioner.debts[4].marital_property == "Nonmarital" }
          % endif
      - "petitioner_debt_both_5": |
          % if len(petitioner.debts) > 4:
          ${ petitioner.debts[4].marital_property == "Both" }
          % endif
      - "petitioner_debt_5": |
          % if len(petitioner.debts) > 4:
          ${ petitioner.debts[4].lender }
          % endif
      - "petitioner_debt_balance_5": |
          % if len(petitioner.debts) > 4:
          ${ petitioner.debts[4].balance }
          % endif
      - "petitioner_monthly_payment_5": |
          % if len(petitioner.debts) > 4:
          ${ petitioner.debts[4].monthly_payment }
          % endif
      - "petitioner_debt_type_5": |
          % if len(petitioner.debts) > 4:
          ${ petitioner.debts[4].description }
          % endif
      - "petitioner_debt_marital_6": |
          % if len(petitioner.debts) > 5:
          ${ petitioner.debts[5].marital_property == "Marital" }
          % endif
      - "petitioner_debt_nonmarital_6": |
          % if len(petitioner.debts) > 5:
          ${ petitioner.debts[5].marital_property == "Nonmarital" }
          % endif
      - "petitioner_debt_both_6": |
          % if len(petitioner.debts) > 5:
          ${ petitioner.debts[5].marital_property == "Both" }
          % endif
      - "petitioner_debt_6": |
          % if len(petitioner.debts) > 5:
          ${ petitioner.debts[5].lender }
          % endif
      - "petitioner_debt_balance_6": |
          % if len(petitioner.debts) > 5:
          ${ petitioner.debts[5].balance }
          % endif
      - "petitioner_monthly_payment_6": |
          % if len(petitioner.debts) > 5:
          ${ petitioner.debts[5].monthly_payment }
          % endif
      - "petitioner_debt_type_6": |
          % if len(petitioner.debts) > 5:
          ${ petitioner.debts[5].description }
          % endif
      - "petitioner_debt_marital_7": |
          % if len(petitioner.debts) > 6:
          ${ petitioner.debts[6].marital_property == "Marital" }
          % endif
      - "petitioner_debt_nonmarital_7": |
          % if len(petitioner.debts) > 6:
          ${ petitioner.debts[6].marital_property == "Nonmarital" }
          % endif
      - "petitioner_debt_both_7": |
          % if len(petitioner.debts) > 6:
          ${ petitioner.debts[6].marital_property == "Both" }
          % endif
      - "petitioner_debt_7": |
          % if len(petitioner.debts) > 6:
          ${ petitioner.debts[6].lender }
          % endif
      - "petitioner_debt_balance_7": |
          % if len(petitioner.debts) > 6:
          ${ petitioner.debts[6].balance }
          % endif
      - "petitioner_monthly_payment_7": |
          % if len(petitioner.debts) > 6:
          ${ petitioner.debts[6].monthly_payment }
          % endif
      - "petitioner_debt_type_7": |
          % if len(petitioner.debts) > 6:
          ${ petitioner.debts[6].description }
          % endif
      - "petitioner_debt_marital_8": |
          % if len(petitioner.debts) > 7:
          ${ petitioner.debts[7].marital_property == "Marital" }
          % endif
      - "petitioner_debt_nonmarital_8": |
          % if len(petitioner.debts) > 7:
          ${ petitioner.debts[7].marital_property == "Nonmarital" }
          % endif
      - "petitioner_debt_both_8": |
          % if len(petitioner.debts) > 7:
          ${ petitioner.debts[7].marital_property == "Both" }
          % endif
      - "petitioner_debt_8": |
          % if len(petitioner.debts) > 7:
          ${ petitioner.debts[7].lender }
          % endif
      - "petitioner_debt_balance_8": |
          % if len(petitioner.debts) > 7:
          ${ petitioner.debts[7].balance }
          % endif
      - "petitioner_monthly_payment_8": |
          % if len(petitioner.debts) > 7:
          ${ petitioner.debts[7].monthly_payment }
          % endif
      - "petitioner_debt_type_8": |
          % if len(petitioner.debts) > 7:
          ${ petitioner.debts[7].description }
          % endif
      - "petitioner_debt_marital_9": |
          % if len(petitioner.debts) > 8:
          ${ petitioner.debts[8].marital_property == "Marital" }
          % endif
      - "petitioner_debt_nonmarital_9": |
          % if len(petitioner.debts) > 8:
          ${ petitioner.debts[8].marital_property == "Nonmarital" }
          % endif
      - "petitioner_debt_both_9": |
          % if len(petitioner.debts) > 8:
          ${ petitioner.debts[8].marital_property == "Both" }
          % endif
      - "petitioner_debt_9": |
          % if len(petitioner.debts) > 8:
          ${ petitioner.debts[8].lender }
          % endif
      - "petitioner_debt_balance_9": |
          % if len(petitioner.debts) > 8:
          ${ petitioner.debts[8].balance }
          % endif
      - "petitioner_monthly_payment_9": |
          % if len(petitioner.debts) > 8:
          ${ petitioner.debts[8].monthly_payment }
          % endif
      - "petitioner_debt_type_9": |
          % if len(petitioner.debts) > 8:
          ${ petitioner.debts[8].description }
          % endif
      - "petitioner_debt_marital_10": |
          % if len(petitioner.debts) > 9:
          ${ petitioner.debts[9].marital_property == "Marital" }
          % endif
      - "petitioner_debt_nonmarital_10": |
          % if len(petitioner.debts) > 9:
          ${ petitioner.debts[9].marital_property == "Nonmarital" }
          % endif
      - "petitioner_debt_both_10": |
          % if len(petitioner.debts) > 9:
          ${ petitioner.debts[9].marital_property == "Both" }
          % endif
      - "petitioner_debt_10": |
          % if len(petitioner.debts) > 9:
          ${ petitioner.debts[9].lender }
          % endif
      - "petitioner_debt_balance_10": |
          % if len(petitioner.debts) > 9:
          ${ petitioner.debts[9].balance }
          % endif
      - "petitioner_monthly_payment_10": |
          % if len(petitioner.debts) > 9:
          ${ petitioner.debts[9].monthly_payment }
          % endif
      - "petitioner_debt_type_10": |
          % if len(petitioner.debts) > 9:
          ${ petitioner.debts[9].description }
          % endif
      - "petitioner_debt_marital_11": |
          % if len(petitioner.debts) > 10:
          ${ petitioner.debts[10].marital_property == "Marital" }
          % endif
      - "petitioner_debt_nonmarital_11": |
          % if len(petitioner.debts) > 10:
          ${ petitioner.debts[10].marital_property == "Nonmarital" }
          % endif
      - "petitioner_debt_both_11": |
          % if len(petitioner.debts) > 10:
          ${ petitioner.debts[10].marital_property == "Both" }
          % endif
      - "petitioner_debt_11": |
          % if len(petitioner.debts) > 10:
          ${ petitioner.debts[10].lender }
          % endif
      - "petitioner_debt_balance_11": |
          % if len(petitioner.debts) > 10:
          ${ petitioner.debts[10].balance }
          % endif
      - "petitioner_monthly_payment_11": |
          % if len(petitioner.debts) > 10:
          ${ petitioner.debts[10].monthly_payment }
          % endif
      - "petitioner_debt_type_11": |
          % if len(petitioner.debts) > 10:
          ${ petitioner.debts[10].description }
          % endif
      - "petitioner_debt_marital_12": |
          % if len(petitioner.debts) > 11:
          ${ petitioner.debts[11].marital_property == "Marital" }
          % endif
      - "petitioner_debt_nonmarital_12": |
          % if len(petitioner.debts) > 11:
          ${ petitioner.debts[11].marital_property == "Nonmarital" }
          % endif
      - "petitioner_debt_both_12": |
          % if len(petitioner.debts) > 11:
          ${ petitioner.debts[11].marital_property == "Both" }
          % endif
      - "petitioner_debt_12": |
          % if len(petitioner.debts) > 11:
          ${ petitioner.debts[11].lender }
          % endif
      - "petitioner_debt_balance_12": |
          % if len(petitioner.debts) > 11:
          ${ petitioner.debts[11].balance }
          % endif
      - "petitioner_monthly_payment_12": |
          % if len(petitioner.debts) > 11:
          ${ petitioner.debts[11].monthly_payment }
          % endif
      - "petitioner_debt_type_12": |
          % if len(petitioner.debts) > 11:
          ${ petitioner.debts[11].description }
          % endif
      - "petitioner_debt_marital_13": |
          % if len(petitioner.debts) > 12:
          ${ petitioner.debts[12].marital_property == "Marital" }
          % endif
      - "petitioner_debt_nonmarital_13": |
          % if len(petitioner.debts) > 12:
          ${ petitioner.debts[12].marital_property == "Nonmarital" }
          % endif
      - "petitioner_debt_both_13": |
          % if len(petitioner.debts) > 12:
          ${ petitioner.debts[12].marital_property == "Both" }
          % endif
      - "petitioner_debt_13": |
          % if len(petitioner.debts) > 12:
          ${ petitioner.debts[12].lender }
          % endif
      - "petitioner_debt_balance_13": |
          % if len(petitioner.debts) > 12:
          ${ petitioner.debts[12].balance }
          % endif
      - "petitioner_monthly_payment_13": |
          % if len(petitioner.debts) > 12:
          ${ petitioner.debts[12].monthly_payment }
          % endif
      - "petitioner_debt_type_13": |
          % if len(petitioner.debts) > 12:
          ${ petitioner.debts[12].description }
          % endif
      - "petitioner_debt_marital_14": |
          % if len(petitioner.debts) > 13:
          ${ petitioner.debts[13].marital_property == "Marital" }
          % endif
      - "petitioner_debt_nonmarital_14": |
          % if len(petitioner.debts) > 13:
          ${ petitioner.debts[13].marital_property == "Nonmarital" }
          % endif
      - "petitioner_debt_both_14": |
          % if len(petitioner.debts) > 13:
          ${ petitioner.debts[13].marital_property == "Both" }
          % endif
      - "petitioner_debt_14": |
          % if len(petitioner.debts) > 13:
          ${ petitioner.debts[13].lender }
          % endif
      - "petitioner_debt_balance_14": |
          % if len(petitioner.debts) > 13:
          ${ petitioner.debts[13].balance }
          % endif
      - "petitioner_monthly_payment_14": |
          % if len(petitioner.debts) > 13:
          ${ petitioner.debts[13].monthly_payment }
          % endif
      - "petitioner_debt_type_14": |
          % if len(petitioner.debts) > 13:
          ${ petitioner.debts[13].description }
          % endif
      - "petitioner_debt_marital_15": |
          % if len(petitioner.debts) > 14:
          ${ petitioner.debts[14].marital_property == "Marital" }
          % endif
      - "petitioner_debt_nonmarital_15": |
          % if len(petitioner.debts) > 14:
          ${ petitioner.debts[14].marital_property == "Nonmarital" }
          % endif
      - "petitioner_debt_both_15": |
          % if len(petitioner.debts) > 14:
          ${ petitioner.debts[14].marital_property == "Both" }
          % endif
      - "petitioner_debt_15": |
          % if len(petitioner.debts) > 14:
          ${ petitioner.debts[14].lender }
          % endif
      - "petitioner_debt_balance_15": |
          % if len(petitioner.debts) > 14:
          ${ petitioner.debts[14].balance }
          % endif
      - "petitioner_monthly_payment_15": |
          % if len(petitioner.debts) > 14:
          ${ petitioner.debts[14].monthly_payment }
          % endif
      - "petitioner_debt_type_15": |
          % if len(petitioner.debts) > 14:
          ${ petitioner.debts[14].description }
          % endif
      - "respondent_debt_marital_1": |
          % if len(respondent.debts) > 0:
          ${ respondent.debts[0].marital_property == "Marital" }
          % endif
      - "respondent_debt_nonmarital_1": |
          % if len(respondent.debts) > 0:
          ${ respondent.debts[0].marital_property == "Nonmarital" }
          % endif
      - "respondent_debt_both_1": |
          % if len(respondent.debts) > 0:
          ${ respondent.debts[0].marital_property == "Both" }
          % endif
      - "respondent_debt_1": |
          % if len(respondent.debts) > 0:
          ${ respondent.debts[0].lender }
          % endif
      - "respondent_debt_balance_1": |
          % if len(respondent.debts) > 0:
          ${ respondent.debts[0].balance }
          % endif
      - "respondent_monthly_payment_1": |
          % if len(respondent.debts) > 0:
          ${ respondent.debts[0].monthly_payment }
          % endif
      - "respondent_debt_type_1": |
          % if len(respondent.debts) > 0:
          ${ respondent.debts[0].description }
          % endif
      - "respondent_debt_marital_2": |
          % if len(respondent.debts) > 1:
          ${ respondent.debts[1].marital_property == "Marital" }
          % endif
      - "respondent_debt_nonmarital_2": |
          % if len(respondent.debts) > 1:
          ${ respondent.debts[1].marital_property == "Nonmarital" }
          % endif
      - "respondent_debt_both_2": |
          % if len(respondent.debts) > 1:
          ${ respondent.debts[1].marital_property == "Both" }
          % endif
      - "respondent_debt_2": |
          % if len(respondent.debts) > 1:
          ${ respondent.debts[1].lender }
          % endif
      - "respondent_debt_balance_2": |
          % if len(respondent.debts) > 1:
          ${ respondent.debts[1].balance }
          % endif
      - "respondent_monthly_payment_2": |
          % if len(respondent.debts) > 1:
          ${ respondent.debts[1].monthly_payment }
          % endif
      - "respondent_debt_type_2": |
          % if len(respondent.debts) > 1:
          ${ respondent.debts[1].description }
          % endif
      - "respondent_debt_marital_3": |
          % if len(respondent.debts) > 2:
          ${ respondent.debts[2].marital_property == "Marital" }
          % endif
      - "respondent_debt_nonmarital_3": |
          % if len(respondent.debts) > 2:
          ${ respondent.debts[2].marital_property == "Nonmarital" }
          % endif
      - "respondent_debt_both_3": |
          % if len(respondent.debts) > 2:
          ${ respondent.debts[2].marital_property == "Both" }
          % endif
      - "respondent_debt_3": |
          % if len(respondent.debts) > 2:
          ${ respondent.debts[2].lender }
          % endif
      - "respondent_debt_balance_3": |
          % if len(respondent.debts) > 2:
          ${ respondent.debts[2].balance }
          % endif
      - "respondent_monthly_payment_3": |
          % if len(respondent.debts) > 2:
          ${ respondent.debts[2].monthly_payment }
          % endif
      - "respondent_debt_type_3": |
          % if len(respondent.debts) > 2:
          ${ respondent.debts[2].description }
          % endif
      - "respondent_debt_marital_4": |
          % if len(respondent.debts) > 3:
          ${ respondent.debts[3].marital_property == "Marital" }
          % endif
      - "respondent_debt_nonmarital_4": |
          % if len(respondent.debts) > 3:
          ${ respondent.debts[3].marital_property == "Nonmarital" }
          % endif
      - "respondent_debt_both_4": |
          % if len(respondent.debts) > 3:
          ${ respondent.debts[3].marital_property == "Both" }
          % endif
      - "respondent_debt_4": |
          % if len(respondent.debts) > 3:
          ${ respondent.debts[3].lender }
          % endif
      - "respondent_debt_balance_4": |
          % if len(respondent.debts) > 3:
          ${ respondent.debts[3].balance }
          % endif
      - "respondent_monthly_payment_4": |
          % if len(respondent.debts) > 3:
          ${ respondent.debts[3].monthly_payment }
          % endif
      - "respondent_debt_type_4": |
          % if len(respondent.debts) > 3:
          ${ respondent.debts[3].description }
          % endif
      - "respondent_debt_marital_5": |
          % if len(respondent.debts) > 4:
          ${ respondent.debts[4].marital_property == "Marital" }
          % endif
      - "respondent_debt_nonmarital_5": |
          % if len(respondent.debts) > 4:
          ${ respondent.debts[4].marital_property == "Nonmarital" }
          % endif
      - "respondent_debt_both_5": |
          % if len(respondent.debts) > 4:
          ${ respondent.debts[4].marital_property == "Both" }
          % endif
      - "respondent_debt_5": |
          % if len(respondent.debts) > 4:
          ${ respondent.debts[4].lender }
          % endif
      - "respondent_debt_balance_5": |
          % if len(respondent.debts) > 4:
          ${ respondent.debts[4].balance }
          % endif
      - "respondent_monthly_payment_5": |
          % if len(respondent.debts) > 4:
          ${ respondent.debts[4].monthly_payment }
          % endif
      - "respondent_debt_type_5": |
          % if len(respondent.debts) > 4:
          ${ respondent.debts[4].description }
          % endif
      - "respondent_debt_marital_6": |
          % if len(respondent.debts) > 5:
          ${ respondent.debts[5].marital_property == "Marital" }
          % endif
      - "respondent_debt_nonmarital_6": |
          % if len(respondent.debts) > 5:
          ${ respondent.debts[5].marital_property == "Nonmarital" }
          % endif
      - "respondent_debt_both_6": |
          % if len(respondent.debts) > 5:
          ${ respondent.debts[5].marital_property == "Both" }
          % endif
      - "respondent_debt_6": |
          % if len(respondent.debts) > 5:
          ${ respondent.debts[5].lender }
          % endif
      - "respondent_debt_balance_6": |
          % if len(respondent.debts) > 5:
          ${ respondent.debts[5].balance }
          % endif
      - "respondent_monthly_payment_6": |
          % if len(respondent.debts) > 5:
          ${ respondent.debts[5].monthly_payment }
          % endif
      - "respondent_debt_type_6": |
          % if len(respondent.debts) > 5:
          ${ respondent.debts[5].description }
          % endif
      - "respondent_debt_marital_7": |
          % if len(respondent.debts) > 6:
          ${ respondent.debts[6].marital_property == "Marital" }
          % endif
      - "respondent_debt_nonmarital_7": |
          % if len(respondent.debts) > 6:
          ${ respondent.debts[6].marital_property == "Nonmarital" }
          % endif
      - "respondent_debt_both_7": |
          % if len(respondent.debts) > 6:
          ${ respondent.debts[6].marital_property == "Both" }
          % endif
      - "respondent_debt_7": |
          % if len(respondent.debts) > 6:
          ${ respondent.debts[6].lender }
          % endif
      - "respondent_debt_balance_10": |
          % if len(respondent.debts) > 6:
          ${ respondent.debts[6].balance }
          % endif
      - "respondent_monthly_payment_7": |
          % if len(respondent.debts) > 6:
          ${ respondent.debts[6].monthly_payment }
          % endif
      - "respondent_debt_type_7": |
          % if len(respondent.debts) > 6:
          ${ respondent.debts[6].description }
          % endif
      - "respondent_debt_marital_8": |
          % if len(respondent.debts) > 7:
          ${ respondent.debts[7].marital_property == "Marital" }
          % endif
      - "respondent_debt_nonmarital_8": |
          % if len(respondent.debts) > 7:
          ${ respondent.debts[7].marital_property == "Nonmarital" }
          % endif
      - "respondent_debt_both_8": |
          % if len(respondent.debts) > 7:
          ${ respondent.debts[7].marital_property == "Both" }
          % endif
      - "respondent_debt_8": |
          % if len(respondent.debts) > 7:
          ${ respondent.debts[7].lender }
          % endif
      - "respondent_debt_balance_8": |
          % if len(respondent.debts) > 7:
          ${ respondent.debts[7].balance }
          % endif
      - "respondent_monthly_payment_8": |
          % if len(respondent.debts) > 7:
          ${ respondent.debts[7].monthly_payment }
          % endif
      - "respondent_debt_type_8": |
          % if len(respondent.debts) > 7:
          ${ respondent.debts[7].description }
          % endif
      - "respondent_debt_marital_9": |
          % if len(respondent.debts) > 8:
          ${ respondent.debts[8].marital_property == "Marital" }
          % endif
      - "respondent_debt_nonmarital_9": |
          % if len(respondent.debts) > 8:
          ${ respondent.debts[8].marital_property == "Nonmarital" }
          % endif
      - "respondent_debt_both_9": |
          % if len(respondent.debts) > 8:
          ${ respondent.debts[8].marital_property == "Both" }
          % endif
      - "respondent_debt_9": |
          % if len(respondent.debts) > 8:
          ${ respondent.debts[8].lender }
          % endif
      - "respondent_debt_balance_9": |
          % if len(respondent.debts) > 8:
          ${ respondent.debts[8].balance }
          % endif
      - "respondent_monthly_payment_9": |
          % if len(respondent.debts) > 8:
          ${ respondent.debts[8].monthly_payment }
          % endif
      - "respondent_debt_type_9": |
          % if len(respondent.debts) > 8:
          ${ respondent.debts[8].description }
          % endif
      - "respondent_debt_marital_10": |
          % if len(respondent.debts) > 9:
          ${ respondent.debts[9].marital_property == "Marital" }
          % endif
      - "respondent_debt_nonmarital_10": |
          % if len(respondent.debts) > 9:
          ${ respondent.debts[9].marital_property == "Nonmarital" }
          % endif
      - "respondent_debt_both_10": |
          % if len(respondent.debts) > 9:
          ${ respondent.debts[9].marital_property == "Both" }
          % endif
      - "respondent_debt_10": |
          % if len(respondent.debts) > 9:
          ${ respondent.debts[9].lender }
          % endif
      - "respondent_debt_balance_10": |
          % if len(respondent.debts) > 9:
          ${ respondent.debts[9].balance }
          % endif
      - "respondent_monthly_payment_10": |
          % if len(respondent.debts) > 9:
          ${ respondent.debts[9].monthly_payment }
          % endif
      - "respondent_debt_type_10": |
          % if len(respondent.debts) > 9:
          ${ respondent.debts[9].description }
          % endif
      - "respondent_debt_marital_11": |
          % if len(respondent.debts) > 10:
          ${ respondent.debts[10].marital_property == "Marital" }
          % endif
      - "respondent_debt_nonmarital_11": |
          % if len(respondent.debts) > 10:
          ${ respondent.debts[10].marital_property == "Nonmarital" }
          % endif
      - "respondent_debt_both_11": |
          % if len(respondent.debts) > 10:
          ${ respondent.debts[10].marital_property == "Both" }
          % endif
      - "respondent_debt_11": |
          % if len(respondent.debts) > 10:
          ${ respondent.debts[10].lender }
          % endif
      - "respondent_debt_balance_11": |
          % if len(respondent.debts) > 10:
          ${ respondent.debts[10].balance }
          % endif
      - "respondent_monthly_payment_11": |
          % if len(respondent.debts) > 10:
          ${ respondent.debts[10].monthly_payment }
          % endif
      - "respondent_debt_type_11": |
          % if len(respondent.debts) > 10:
          ${ respondent.debts[10].description }
          % endif
      - "respondent_debt_marital_12": |
          % if len(respondent.debts) > 11:
          ${ respondent.debts[11].marital_property == "Marital" }
          % endif
      - "respondent_debt_nonmarital_12": |
          % if len(respondent.debts) > 11:
          ${ respondent.debts[11].marital_property == "Nonmarital" }
          % endif
      - "respondent_debt_both_12": |
          % if len(respondent.debts) > 11:
          ${ respondent.debts[11].marital_property == "Both" }
          % endif
      - "respondent_debt_12": |
          % if len(respondent.debts) > 11:
          ${ respondent.debts[11].lender }
          % endif
      - "respondent_debt_balance_12": |
          % if len(respondent.debts) > 11:
          ${ respondent.debts[11].balance }
          % endif
      - "respondent_monthly_payment_12": |
          % if len(respondent.debts) > 11:
          ${ respondent.debts[11].monthly_payment }
          % endif
      - "respondent_debt_type_12": |
          % if len(respondent.debts) > 11:
          ${ respondent.debts[11].description }
          % endif
      - "respondent_debt_marital_13": |
          % if len(respondent.debts) > 12:
          ${ respondent.debts[12].marital_property == "Marital" }
          % endif
      - "respondent_debt_nonmarital_13": |
          % if len(respondent.debts) > 12:
          ${ respondent.debts[12].marital_property == "Nonmarital" }
          % endif
      - "respondent_debt_both_13": |
          % if len(respondent.debts) > 12:
          ${ respondent.debts[12].marital_property == "Both" }
          % endif
      - "respondent_debt_13": |
          % if len(respondent.debts) > 12:
          ${ respondent.debts[12].lender }
          % endif
      - "respondent_debt_balance_13": |
          % if len(respondent.debts) > 12:
          ${ respondent.debts[12].balance }
          % endif
      - "respondent_monthly_payment_13": |
          % if len(respondent.debts) > 12:
          ${ respondent.debts[12].monthly_payment }
          % endif
      - "respondent_debt_type_13": |
          % if len(respondent.debts) > 12:
          ${ respondent.debts[12].description }
          % endif
      - "respondent_debt_marital_14": |
          % if len(respondent.debts) > 13:
          ${ respondent.debts[13].marital_property == "Marital" }
          % endif
      - "respondent_debt_nonmarital_14": |
          % if len(respondent.debts) > 13:
          ${ respondent.debts[13].marital_property == "Nonmarital" }
          % endif
      - "respondent_debt_both_14": |
          % if len(respondent.debts) > 13:
          ${ respondent.debts[13].marital_property == "Both" }
          % endif
      - "respondent_debt_14": |
          % if len(respondent.debts) > 13:
          ${ respondent.debts[13].lender }
          % endif
      - "respondent_debt_balance_14": |
          % if len(respondent.debts) > 13:
          ${ respondent.debts[13].balance }
          % endif
      - "respondent_monthly_payment_14": |
          % if len(respondent.debts) > 13:
          ${ respondent.debts[13].monthly_payment }
          % endif
      - "respondent_debt_type_14": |
          % if len(respondent.debts) > 13:
          ${ respondent.debts[13].description }
          % endif
      - "respondent_debt_marital_15": |
          % if len(respondent.debts) > 14:
          ${ respondent.debts[14].marital_property == "Marital" }
          % endif
      - "respondent_debt_nonmarital_15": |
          % if len(respondent.debts) > 14:
          ${ respondent.debts[14].marital_property == "Nonmarital" }
          % endif
      - "respondent_debt_both_15": |
          % if len(respondent.debts) > 14:
          ${ respondent.debts[14].marital_property == "Both" }
          % endif
      - "respondent_debt_15": |
          % if len(respondent.debts) > 14:
          ${ respondent.debts[14].lender }
          % endif
      - "respondent_debt_balance_15": |
          % if len(respondent.debts) > 14:
          ${ respondent.debts[14].balance }
          % endif
      - "respondent_monthly_payment_15": |
          % if len(respondent.debts) > 14:
          ${ respondent.debts[14].monthly_payment }
          % endif
      - "respondent_debt_type_15": |
          % if len(respondent.debts) > 14:
          ${ respondent.debts[14].description }
          % endif
      - "petitioner_lack_jurisdiction": ${ False } 
      - "no_maintenance_by_respondent": ${ not is_maintenance_award or not maintenance_awarded_to == "petitioner" } 
      - "respondent_maintenance": |
          % if maintenance_awarded_to == "petitioner":
          ${ maintenance_amount } 
          % endif
      - "petitioner_maintenance_sum": ${ maintenance_awarded_to == "petitioner" } 
      - "petitioner_maintenance_modification_allowed": ${  maintenance_awarded_to == "petitioner" and maintenance_income_withholding } 
      - "petitioner_maintenance_no_modification": ${ maintenance_awarded_to == "petitioner" and not maintenance_income_withholding } 
      - "respondent_lack_jurisdiction": ${ not respondent.lives_in_missouri and not marriage.live_together_in_mo } 
      - "no_maintenance_by_petitioner": ${ not is_maintenance_award or not maintenance_awarded_to == "respondent" } 
      - "petitioner_maintenance": |
          % if maintenance_awarded_to == "respondent":
          ${ maintenance_amount }
          % endif
      - "respondent_maintenance_sum": ${ maintenance_awarded_to == "respondent" } 
      - "respondent_maintenance_modification_allowed": ${ maintenance_awarded_to == "respondent" and maintenance_income_withholding } 
      - "respondent_maintenance_no_modification": ${ maintenance_awarded_to == "respondent" and not maintenance_income_withholding } 
      - "withhold_income": ${ maintenance_income_withholding } 
      - "no_withholding_income": ${ not maintenance_income_withholding } 
      - "no_withholding_reason_1": ${ maintenance_income_withholding_reason } 
      - "additional_provision_1": ${ additional_provisions } 
      - "oath_date": ${ notice_date } 
      - "party_service_1": ${ other_parties[0].name_full() } 
      - "party_service_address_1": |
          ${ other_parties[0].address.on_one_line() }
      - "party_service_2": |
          % if len(other_parties) > 1:
          ${ other_parties[1].name_full() } 
          % endif
      - "party_service_address_2": |
          % if len(other_parties) > 1:
          ${ other_parties[1].address.on_one_line() }
          % endif
      - "party_service_3": |
          % if len(other_parties) > 1:
          ${ other_parties[2].name_full() } 
          % endif
      - "party_service_address_3": |
          % if len(other_parties) > 1:
          ${ other_parties[2].address.on_one_line() }
          % endif
      - "party_service_4": |
          % if len(other_parties) > 1:
          ${ other_parties[3].name_full() } 
          % endif
      - "party_service_address_4": |
          % if len(other_parties) > 1:
          ${ other_parties[3].address.on_one_line() }
          % endif
---